descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.30949843056969706, 0.7203550000000002, 0.6535714285714286, 0.5669466666666672]","tensor(0.0217, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14262687727008885,2,"('crossover', 'O=C1NC(=O)C(c2ccc(-c3ccc([N+]([O-])O)cc3)cc2)S1', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(OC=N)C2')","tensor(0.1336, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1c(C)c(-c2ccc([N+]([O-])O)cc2)c(C)c2c1OC(OC=N)C2,2
"[0.33098679642424234, 0.5225433333333336, 0.24407142857142858, 0.6229000000000007]","tensor(0.1079, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09354411456589512,4,"('mutation', '[*;!H0;!R:1]>>[*:1]-C', 'CON1CCN(c2c(C)c(C)c3c(c2C)CC(C)(CO)O3)CC1')","tensor(0.1079, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",COCC1(C)Cc2c(C)c(N3CCN(OC)CC3)c(C)c(C)c2O1,4
"[0.5096468506787878, 0.1584500000000001, 0.5108571428571429, 0.7315944444444449]","tensor(0.1147, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11937162853281019,5,"('crossover', 'COc1ccc(N2CCN(C3SC(=O)NC3O)CC2)cc1', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.1147, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",COc1ccc(N2CCN(N3CCN(C4SC(=O)NC4O)CC3)CC2)cc1,5
"[0.2793149745333332, 0.423255, 0.49300000000000005, 0.5435500000000004]","tensor(0.0546, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1262719343975071,13,"('crossover', 'COc1ccc(N2CCN(C3SC(=O)NC3O)CC2)cc1', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.1758, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1c(C)c(N2C=CN(OC=N)CC2)c(C)c2c1OC(CO)C2,13
"[0.5552004265333332, 0.7181666666666672, 0.5847857142857144, 0.8769044444444449]","tensor(0.0402, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.2443835334211356,14,"('crossover', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2', 'Cc1oc(-c2ccccc2)nc1CCC(CC1SC(=O)NC1=O)=NO')","tensor(0.1834, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(OC=N)C2,14
"[0.13359153589090916, 0.8024000000000006, 0.2518571428571429, 0.3775333333333336]","tensor(0.1245, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1121976886849836,16,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'COc1ccc(-c2cc(-c3ccccc3)on2)cc1')","tensor(0.1245, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",FCOc1ccc(-c2cc(-c3ccccc3)on2)cc1,16
"[0.8243662866666667, 0.9626533333333339, 0.604, 0.9502744444444448]","tensor(0.1295, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12522384946592835,18,"('mutation', '[#8:1]>>[#35:1]', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1295, dtype=torch.float64)","tensor(3.4633e-05, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1CCC(=NBr)c1ccc(CC2SC(=O)NC2=O)cc1,18
"[0.5880635231636363, 0.48194500000000007, 0.8330714285714286, 0.7389577777777782]","tensor(1.1402e-23, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18972695681758361,21,"('crossover', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(OC=N)C2', 'CN(CC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1840, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",CN(c1ccc(OC=N)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,21
"[0.4212343342181817, 0.15675000000000006, 0.9481428571428572, 0.4150111111111113]","tensor(0.0092, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1135066898424346,24,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CC(C)(c1ccc([N+]([O-])O)cc1)O2', 'O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1')","tensor(0.1215, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc(S(=O)(=O)N(CF)[N+]([O-])O)cc2)S1,24
"[0.5576976581818182, 0.38887, 0.9272142857142858, 0.6345144444444446]","tensor(0.0130, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11879252909670791,27,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1303, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1,27
"[0.621619581612121, 0.1712166666666668, 0.7315714285714285, 0.7651588888888892]","tensor(0.0203, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1217589805149838,33,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'COc1ccc(N2CCN(S(=O)(=O)N(C)CCC3SC(=O)NC3=O)CC2)cc1')","tensor(0.1168, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(N2CCN(S(=O)(=O)N(C)CCC3SC(=O)NC3O)CC2)cc1,33
"[0.5158208842060605, 0.620021666666667, 0.49300000000000005, 0.8459833333333339]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 1 0],0.2669630074512247,37,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=N', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1463, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2,37
"[0.5125463507272725, 0.8205033333333339, 0.8360000000000002, 0.7514144444444446]","tensor(3.4607e-14, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.1793717589004327,38,"('mutation', '[*;!H0;!R:1]~[*:2]>>[*:1]=N-[*:2]', 'Cc1cc(O)c(-c2cc(-c3ccc([N+]([O-])O)cc3)no2)c2c1OC(C)(C)CC2')","tensor(0.1599, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",C=NC1(C)CCc2c(c(C)cc(O)c2-c2cc(-c3ccc([N+]([O-])O)cc3)no2)O1,38
"[0.4704435704969695, 0.8600933333333342, 0.17814285714285716, 0.8498222222222229]","tensor(0.0199, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.12861822198648112,40,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1471, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",CCC1Cc2c(C)c(N3CCN(c4ccc(OC)cc4)CC3)c(C)c(C)c2O1,40
"[0.26401085774545446, 0.7420100000000006, 0.5617857142857143, 0.5335144444444446]","tensor(1.9915e-58, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18485609556793398,42,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(c1ccc([N+]([O-])O)cc1)O2')","tensor(0.1351, dtype=torch.float64)","tensor(0.0007, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CC=C(c1ccc([N+]([O-])O)cc1)O2,42
"[0.2879821709696969, 0.39904999999999996, 0.8670714285714287, 0.41675777777777795]","tensor(0.0114, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.137031956879924,44,"('crossover', 'Cc1cc(O)c(-c2cc(-c3ccc([N+]([O-])O)cc3)no2)c2c1OC(C)(C)CC2', 'O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1')","tensor(0.1329, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",O=C1NC(=O)C(Cc2cc(-c3ccc([N+]([O-])O)cc3)no2)S1,44
"[0.26106710161212127, 0.8116050000000007, 0.4467142857142858, 0.554016666666667]","tensor(0.0034, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1659345075589625,50,"('crossover', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(OC=N)C2', 'Cc1c(C)c2c(c(C)c1O)CCC(c1ccc([N+]([O-])O)cc1)O2')","tensor(0.1661, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(c1ccc(OC=N)cc1)O2,50
"[0.033761346969696966, 0.4677266666666667, 0.27635714285714286, 0.30030888888888935]","tensor(0.1348, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.0865875938170929,51,"('crossover', 'COc1ccc(CC2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(C)(CO)O4)CC2)cc1')","tensor(0.1348, dtype=torch.float64)","tensor(6.2753e-05, dtype=torch.float64)",COc1c(C)c(C)c2c(c1C)CC(C)(CO)O2,51
"[0.5097128537090908, 0.6985550000000004, 0.49300000000000005, 0.8393833333333338]","tensor(0.0162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2580419267399845,53,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.1807, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2,53
"[0.5486839808363636, 0.39968333333333333, 0.7412857142857143, 0.7001922222222225]","tensor(0.0658, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.159154732082978,61,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1', 'CN(c1ccc(CC2SC(=O)NC2=O)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1738, dtype=torch.float64)","tensor(0.0002, dtype=torch.float64)",CN(c1ccc(CO)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,61
"[0.05758429179393941, 0.12121666666666664, 0.8670714285714287, 0.1341355555555556]","tensor(0.1076, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09300859379902891,65,"('crossover', 'Cc1c(C)c(N2CCN(C)CC2)c(C)c2c1OC(C)(C)C2', 'O=C1NC(=O)C(Cc2cc(-c3ccc([N+]([O-])O)cc3)no2)S1')","tensor(0.1076, dtype=torch.float64)","tensor(0.0007, dtype=torch.float64)",O=C1NC(=O)C(Cc2cc([N+]([O-])O)no2)S1,65
"[0.5127287596727271, 0.7550383333333337, 0.5812857142857144, 0.7989833333333338]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.26061956318035534,67,"('mutation', '[#6:1]>>[#7:1]', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.1714, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1c(C)c(N2C=CN(c3ccc(ON=N)cc3)CC2)c(C)c2c1OC(CO)C2,67
"[0.3639275309090909, 0.7431733333333338, 0.8681428571428572, 0.5384755555555559]","tensor(0.1000, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.08852889093748958,70,"('crossover', 'Cc1c(C)c2c(c(-c3cc([N+](=O)[O-])no3)c1O)C=CC(C)(C)O2', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(C)C2')","tensor(0.1000, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c([N+](=O)[O-])c(-c2cc([N+](=O)[O-])no2)c2c1OC(C)(C)C=C2,70
"[0.7731379014787876, 0.8791566666666673, 0.7920714285714285, 0.9704166666666669]","tensor(0.0003, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14379927375510906,72,"('crossover', 'O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1')","tensor(0.1337, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C3SC(=O)NC3=O)O4)on2)cc1,72
"[0.25781436836363664, 0.5014500000000001, 0.5625714285714286, 0.42884666666666693]","tensor(0.0282, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10652821621924537,73,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'CCCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1297, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc(C(CCCF)=NO)cc2)S1,73
"[0.7972956923878785, 0.592776666666667, 0.8072142857142859, 0.966625555555556]","tensor(0.0005, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.20413554133064615,78,"('crossover', 'CN(c1ccccc1)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1', 'CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1')","tensor(0.1342, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1c(C)c(N(C)S(=O)(=O)c2ccc(C=C3SC(=O)NC3=O)cc2)c(C)c2c1OC(CO)C2,78
"[0.021505514327545446, 0.2943833333333334, 0.47357142857142853, 0.25515222222222256]","tensor(0.0233, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1314347779129878,81,"('mutation', '[*:1]~[D1]>>[*:1]', '[O-][N+](O)c1ccc(-c2ccc(OCO)cc2)cc1')","tensor(0.1302, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",OCOc1ccc(-c2ccc([NH2+]O)cc2)cc1,81
"[0.21870569386666683, 0.7692433333333338, 0.21778571428571428, 0.5507855555555561]","tensor(0.0111, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12335794712167093,82,"('crossover', 'CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1', 'CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1')","tensor(0.1251, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(C)O3)cc1,82
"[0.46724118684848476, 0.691471666666667, 0.49300000000000005, 0.7853055555555559]","tensor(0.0835, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2366265009990669,83,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.2237, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(O)C2,83
"[0.6155115511151514, 0.20591666666666664, 0.709, 0.7540500000000004]","tensor(0.1323, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12378451126693668,86,"('crossover', 'CN(CCC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'CCC1(C)Cc2c(C)c(N3CCN(c4ccc(OC)cc4)CC3)c(C)c(C)c2O1')","tensor(0.1323, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(N2CCN(S(=O)(=O)N(C)CCC3SC(=O)NC3=O)CC2)cc1,86
"[0.9031338682303031, 0.5161833333333335, 0.9265714285714286, 0.9529688888888891]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21000573354765412,88,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'CN(c1ccc(CC2SC(=O)NC2=O)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1459, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1,88
"[0.6944468979151514, 0.5149666666666667, 0.6747857142857143, 0.9448244444444447]","tensor(0.1379, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14312800862050726,90,"('crossover', 'COc1ccc(N2CCN(c3cc(-c4ccc([N+](=O)[O-])cc4)no3)CC2)cc1', 'CCCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1379, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",COc1ccc(N2CCN(CC(=NO)c3ccc(CC4SC(=O)NC4=O)cc3)CC2)cc1,90
"[0.6342100172606059, 0.4332433333333335, 0.35628571428571437, 0.8921333333333341]","tensor(0.1012, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10192569351424537,96,"('crossover', 'COCC1(C)Cc2c(C)c(N3CCN(OC)CC3)c(C)c(C)c2O1', 'COc1ccc(N2CCN(S(=O)(=O)N(C)CCC3SC(=O)NC3=O)CC2)cc1')","tensor(0.1012, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",CON1CCN(OCC2(C)Cc3c(C)c(N4CCN(OC)CC4)c(C)c(C)c3O2)CC1,96
"[0.2760785503393939, 0.7094066666666672, 0.7045, 0.4830355555555558]","tensor(0.1187, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.10452787760781518,97,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(-c3cc([N+](=O)[O-])no3)c1O)CCC(C)(C)O2')","tensor(0.1187, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc([N+](=O)[O-])no3)c1O)C=CC(C)(C)O2,97
"[0.267175132109091, 0.5979766666666669, 0.36228571428571427, 0.5664722222222227]","tensor(0.0154, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14981612719547427,98,"('mutation', '[*;!R:1]~[*:2]>>[*:1]N[*:2]', 'COc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1')","tensor(0.1263, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1,98
"[0.07907463229090908, 0.7528666666666671, 0.2518571428571429, 0.37696666666666706]","tensor(0.1319, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10602136939076091,102,"('crossover', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1319, dtype=torch.float64)","tensor(6.3374e-05, dtype=torch.float64)",COc1ccc(-c2cc(-c3ccccc3)on2)cc1,102
"[0.05481679780606061, 0.5280116666666667, 0.4467142857142858, 0.32226111111111144]","tensor(0.0440, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14233490310316252,105,"('crossover', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2', '[O-][N+](O)c1ccc(-c2ccc(OCO)cc2)cc1')","tensor(0.1503, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",N=COc1ccc(-c2ccc(OCO)cc2)cc1,105
"[0.37626604120000007, 0.9891066666666676, 0.3963571428571429, 0.6837977777777784]","tensor(0.1377, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12656108669200594,108,"('crossover', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+](=O)[O-])cc4)no3)c1O)CCC(C)(C)O2', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1377, dtype=torch.float64)","tensor(4.2752e-05, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc(-c4ccccc4)no3)c1O)CCC(C)(C)O2,108
"[0.255069330230303, 0.8551266666666674, 0.21778571428571428, 0.5985077777777783]","tensor(0.0330, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12401116026420882,110,"('crossover', 'CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(=CO)O3)cc1', 'CNOc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1')","tensor(0.1468, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",CC=C1Cc2c(C)c(-c3ccc(ONC)cc3)c(C)c(C)c2O1,110
"[0.5274993160363634, 0.9517333333333339, 0.7477142857142858, 0.7193144444444448]","tensor(0., dtype=torch.float64)",[0 1 0 ... 0 0 0],0.1806520967782178,115,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'CC1(C)CCc2c(c(Cl)cc(O)c2-c2cc(-c3ccc([N+]([O-])O)cc3)no2)O1')","tensor(0.1538, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",CC1(C)C=Cc2c(c(Cl)cc(O)c2-c2cc(-c3ccc([N+]([O-])O)cc3)no2)O1,115
"[0.6182190854545455, 0.17546666666666655, 0.9265714285714286, 0.6644133333333335]","tensor(0.1274, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12310964191769566,117,"('crossover', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1274, dtype=torch.float64)","tensor(5.8663e-05, dtype=torch.float64)",CN(CC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,117
"[0.09134385050909088, 0.7344666666666672, 0.23278571428571432, 0.3209722222222227]","tensor(0.0317, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10498297178331273,118,"('crossover', 'Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2', 'O=C1NC(=O)C(Cc2ccc(C(CCCF)=NO)cc2)S1')","tensor(0.1164, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",ON=C(CCCF)c1ccc(CCCCF)cc1,118
"[0.06386858443636365, 0.47346666666666665, 0.5617857142857143, 0.29488111111111137]","tensor(0.0300, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1294715298199627,119,"('mutation', '[*;!H0;!R:1]>>[*:1]-O', 'COc1ccc(-c2ccc([N+]([O-])O)cc2)cc1')","tensor(0.1250, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",[O-][N+](O)c1ccc(-c2ccc(OCO)cc2)cc1,119
"[0.24875099704242434, 0.3327166666666666, 0.556, 0.4479822222222225]","tensor(0.0369, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15161825491955797,121,"('crossover', 'CN(c1ccc(CO)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'CN(CCC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1489, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",CN(c1ccc(CO)cc1)S(=O)(=O)c1ccc(CO)cc1,121
"[0.11533822507878788, 0.4528833333333333, 0.4115, 0.3348622222222226]","tensor(0.0194, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1076196063816194,125,"('crossover', 'CN(c1ccccc1)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1', 'Cc1c(C)c2c(c(-c3cc(-c4ccccc4)no3)c1O)CCC(C)(C)O2')","tensor(0.1257, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",CN(c1ccccc1)S(=O)(=O)c1ccc(O)cc1,125
"[0.46124341546666664, 0.7545883333333339, 0.4270714285714286, 0.8207722222222227]","tensor(0.0252, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.28067309016304215,130,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2')","tensor(0.1984, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1c(C)c(N2C=CN(c3ccc(OC=N)cc3)CC2)c(C)c2c1C(CO)C2,130
"[0.4729646271515152, 0.6558833333333336, 0.7953571428571428, 0.7045966666666668]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19457456736321077,133,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'CC(=NO)c1ccc(C(=NO)c2ccc(CC3SC(=O)NC3=O)cc2)cc1')","tensor(0.1474, dtype=torch.float64)","tensor(0.0007, dtype=torch.float64)",CC(=NO)c1ccc(C(=NO)c2ccc(C=C3SC(=O)NC3=O)cc2)cc1,133
"[0.42797190363636345, 0.6737800000000004, 0.2567142857142857, 0.7940422222222229]","tensor(0.1425, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.14294385485271086,134,"('crossover', 'Cc1oc(-c2ccccc2)nc1CCC(=NBr)c1ccc(CC2SC(=O)NC2=O)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1425, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1,134
"[0.27011888824242414, 0.7210600000000005, 0.5617857142857143, 0.5265700000000003]","tensor(0.0159, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12861819390246365,140,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(c1ccc([N+]([O-])O)cc1)O2')","tensor(0.1225, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CC(C)(c1ccc([N+]([O-])O)cc1)O2,140
"[0.6606907523151516, 0.24048333333333324, 0.9265714285714286, 0.7157133333333335]","tensor(0.1272, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12935998084789188,146,"('crossover', 'COc1ccc(CN2CCN(c3c(C)c(C)c4c(c3C)CC(C)(C)O4)CC2)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1272, dtype=torch.float64)","tensor(5.9968e-05, dtype=torch.float64)",CN(CCC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,146
"[0.27286046312727275, 0.5893833333333336, 0.6811428571428573, 0.47440222222222245]","tensor(0.0040, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14236425197456162,148,"('crossover', 'COc1ccc(-c2ccc([N+]([O-])O)cc2)cc1', 'O=C1NC(=O)C(Cc2cc(-c3ccc([N+]([O-])O)cc3)no2)S1')","tensor(0.1143, dtype=torch.float64)","tensor(0.0007, dtype=torch.float64)",O=C1NC(=O)C(c2ccc(-c3ccc([N+]([O-])O)cc3)cc2)S1,148
"[0.08493425081212122, 0.2898833333333333, 0.6811428571428573, 0.24456888888888909]","tensor(0.0306, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.0929252548422286,149,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CC(C)(c1ccc([N+]([O-])O)cc1)O2', 'O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1')","tensor(0.1136, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc([N+]([O-])O)cc2)S1,149
