descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.33098679642424234, 0.5225433333333336, 0.24407142857142858, 0.6229000000000007]","tensor(0.1079, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09354411456589512,4.0,"('mutation', '[*;!H0;!R:1]>>[*:1]-C', 'CON1CCN(c2c(C)c(C)c3c(c2C)CC(C)(CO)O3)CC1')","tensor(0.1079, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",COCC1(C)Cc2c(C)c(N3CCN(OC)CC3)c(C)c(C)c2O1,4
"[0.28851512956363606, 0.2889066666666667, 0.40121428571428575, 0.5707955555555561]","tensor(0.0224, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1096161306229385,13.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'COc1ccc(-c2cc(-c3ccccc3)on2)cc1')","tensor(0.1309, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1c(CO)c2c(c(C)c1N1CCN(C)CC1)CC(C)(CO)O2,13
"[0.6367432640969698, 0.8092033333333336, 0.7484999999999999, 0.8709355555555558]",,[0 0 0 ... 0 0 0],0.143171423044239,,"('database', 'no reaction', 'no parent')",,,Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1,14
"[0.8243662866666667, 0.9626533333333339, 0.604, 0.9502744444444448]","tensor(0.1295, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12522384946592835,18.0,"('mutation', '[#8:1]>>[#35:1]', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1295, dtype=torch.float64)","tensor(3.4633e-05, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1CCC(=NBr)c1ccc(CC2SC(=O)NC2=O)cc1,18
"[0.5940612945454545, 0.46900000000000003, 0.9049285714285714, 0.7083211111111115]","tensor(0.0333, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1445939129128165,21.0,"('crossover', 'CN(Cc1ccc([N+](=O)[O-])cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1')","tensor(0.1680, dtype=torch.float64)","tensor(0.0002, dtype=torch.float64)",CN(c1ccc([N+](=O)[O-])cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,21
"[0.318286101660606, 0.10849999999999986, 0.7412857142857143, 0.4122033333333336]","tensor(0.1277, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.10980388467294655,24.0,"('crossover', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+](=O)[O-])cc4)no3)c1O)CCC(C)(C)O2', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1277, dtype=torch.float64)","tensor(5.8060e-05, dtype=torch.float64)",CN(CO)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,24
"[0.5638056886787879, 0.31723666666666667, 0.9272142857142858, 0.6291255555555557]","tensor(0.1267, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11725287169699923,27.0,"('crossover', 'COc1ccc(CC2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1267, dtype=torch.float64)","tensor(5.1622e-05, dtype=torch.float64)",Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,27
"[0.5158208842060605, 0.620021666666667, 0.49300000000000005, 0.8459833333333339]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 1 0],0.2669630074512247,37.0,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=N', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1463, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1c(C)c(N2CCN(c3ccc(OC=N)cc3)CC2)c(C)c2c1OC(CO)C2,37
"[0.564015991369697, 0.7142833333333337, 0.7953571428571428, 0.8018077777777779]","tensor(0.1211, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1627362032139351,38.0,"('crossover', 'CCCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1', 'CN(CC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1211, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",CCCC(=NO)c1ccc(C(=NO)c2ccc(CC3SC(=O)NC3=O)cc2)cc1,38
"[0.4704435704969695, 0.8600933333333342, 0.17814285714285716, 0.8498222222222229]","tensor(0.0199, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.12861822198648112,40.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1471, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",CCC1Cc2c(C)c(N3CCN(c4ccc(OC)cc4)CC3)c(C)c(C)c2O1,40
"[0.3125905551030302, 0.7860766666666673, 0.5617857142857143, 0.5778700000000003]","tensor(0.1256, dtype=torch.float64)",[0 0 1 ... 0 0 0],0.13286197360613483,42.0,"('crossover', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(c1cc(C3CCCC3)on1)O2')","tensor(0.1256, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(c1ccc([N+]([O-])O)cc1)O2,42
"[0.40647541633939377, 0.46912000000000004, 0.7945714285714286, 0.6033166666666668]","tensor(0.1274, dtype=torch.float64)",[0 1 0 ... 1 0 0],0.12150646885496615,44.0,"('mutation', '[*;!H0;!R:1]>>[*:1]-N', 'COc1ccc(CC2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1')","tensor(0.1274, dtype=torch.float64)","tensor(6.1270e-05, dtype=torch.float64)",COc1ccc(C(N)C2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1,44
"[0.3521184658303031, 0.9505766666666675, 0.3963571428571429, 0.6258977777777783]",,[0 0 1 ... 0 0 0],0.12824766049621616,,"('database', 'no reaction', 'no parent')",,,Cc1c(C)c2c(c(C)c1O)CCC(C)(c1cc(C3CCCC3)on1)O2,50
"[0.033761346969696966, 0.4677266666666667, 0.27635714285714286, 0.30030888888888935]","tensor(0.1348, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.0865875938170929,51.0,"('crossover', 'COc1ccc(CC2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(C)(CO)O4)CC2)cc1')","tensor(0.1348, dtype=torch.float64)","tensor(6.2753e-05, dtype=torch.float64)",COc1c(C)c(C)c2c(c1C)CC(C)(CO)O2,51
"[0.609854113842424, 0.6178233333333337, 0.4671428571428572, 0.9299844444444451]","tensor(8.0293e-100, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.16448756221884908,53.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1551, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CCO)O4)CC2)cc1,53
"[0.5486839808363636, 0.39968333333333333, 0.7412857142857143, 0.7001922222222225]","tensor(0.0658, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.159154732082978,61.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1', 'CN(c1ccc(CC2SC(=O)NC2=O)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1738, dtype=torch.float64)","tensor(0.0002, dtype=torch.float64)",CN(c1ccc(CO)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,61
"[0.4671690370181819, 0.981273333333334, 0.6032142857142857, 0.7424944444444449]","tensor(1.4314e-10, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15206894626225675,67.0,"('mutation', '[*:1]~[D1]>>[*:1]', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2')","tensor(0.1443, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1cc(-c2cc(-c3ccc([N+]([O-])O)cc3)no2)c2c(c1C)OC(C)(C)CC2,67
"[0.7396260991151514, 0.7157700000000004, 0.7827142857142858, 0.8986388888888893]","tensor(0.1277, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13350861367711686,72.0,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1277, dtype=torch.float64)","tensor(5.8492e-05, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1,72
"[0.3122883302787879, 0.28685, 0.5967857142857144, 0.4505944444444449]","tensor(0.1299, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10145274756002716,73.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1299, dtype=torch.float64)","tensor(0.0002, dtype=torch.float64)",CCN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,73
"[0.703262462751515, 0.6448700000000002, 0.7827142857142858, 0.8592055555555559]","tensor(0.0175, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1310111647023709,78.0,"('crossover', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1365, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1N(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,78
"[0.19157625307878776, 0.5961933333333337, 0.11221428571428572, 0.5419333333333339]","tensor(0.1330, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.08931509302799588,82.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'COc1ccc(CN2CCN(c3c(C)c(C)c4c(c3C)CC(C)(C)O4)CC2)cc1')","tensor(0.1330, dtype=torch.float64)","tensor(6.0708e-05, dtype=torch.float64)",Cc1c(C)c(N2CCN(C)CC2)c(C)c2c1OC(C)(C)C2,82
"[0.4516348452363635, 0.5559333333333335, 0.5967857142857144, 0.6397722222222225]","tensor(0.0306, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14019701677848964,83.0,"('crossover', 'CN(Cc1ccc([N+](=O)[O-])cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1')","tensor(0.1479, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",CN(c1ccccc1)S(=O)(=O)c1ccc(C=C2SC(=O)NC2=O)cc1,83
"[0.6155115511151514, 0.20591666666666664, 0.709, 0.7540500000000004]","tensor(0.1323, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12378451126693668,86.0,"('crossover', 'CN(CCC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'CCC1(C)Cc2c(C)c(N3CCN(c4ccc(OC)cc4)CC3)c(C)c(C)c2O1')","tensor(0.1323, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(N2CCN(S(=O)(=O)N(C)CCC3SC(=O)NC3=O)CC2)cc1,86
"[0.9031338682303031, 0.5161833333333335, 0.9265714285714286, 0.9529688888888891]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21000573354765412,88.0,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'CN(c1ccc(CC2SC(=O)NC2=O)cc1)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1459, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc(N(CF)S(=O)(=O)c3ccc(CC4SC(=O)NC4=O)cc3)cc2)S1,88
"[0.6944468979151514, 0.5149666666666667, 0.6747857142857143, 0.9448244444444447]","tensor(0.1379, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14312800862050726,90.0,"('crossover', 'COc1ccc(N2CCN(c3cc(-c4ccc([N+](=O)[O-])cc4)no3)CC2)cc1', 'CCCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1379, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",COc1ccc(N2CCN(CC(=NO)c3ccc(CC4SC(=O)NC4=O)cc3)CC2)cc1,90
"[0.2760785503393939, 0.7094066666666672, 0.7045, 0.4830355555555558]","tensor(0.1187, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.10452787760781518,97.0,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(-c3cc([N+](=O)[O-])no3)c1O)CCC(C)(C)O2')","tensor(0.1187, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc([N+](=O)[O-])no3)c1O)C=CC(C)(C)O2,97
"[0.2216875592848484, 0.6805433333333336, 0.27635714285714286, 0.5316311111111116]","tensor(0.0304, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11090407762469762,98.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1')","tensor(0.1333, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(-c2c(C)c(C)c3c(c2C)CC(CO)O3)cc1,98
"[0.07907463229090908, 0.7528666666666671, 0.2518571428571429, 0.37696666666666706]","tensor(0.1319, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10602136939076091,102.0,"('crossover', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1319, dtype=torch.float64)","tensor(6.3374e-05, dtype=torch.float64)",COc1ccc(-c2cc(-c3ccccc3)on2)cc1,102
"[0.015399146193939397, 0.5868000000000002, 0.4172857142857143, 0.2819722222222225]","tensor(0.0444, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10633667979919602,105.0,"('crossover', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2')","tensor(0.1340, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",COc1ccc(-c2ccc([N+]([O-])O)cc2)cc1,105
"[0.37626604120000007, 0.9891066666666676, 0.3963571428571429, 0.6837977777777784]","tensor(0.1377, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12656108669200594,108.0,"('crossover', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+](=O)[O-])cc4)no3)c1O)CCC(C)(C)O2', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1377, dtype=torch.float64)","tensor(4.2752e-05, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc(-c4ccccc4)no3)c1O)CCC(C)(C)O2,108
"[0.4731668084, 0.8808033333333339, 0.7477142857142858, 0.7083588888888893]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 1 0],0.17868048001334183,115.0,"('mutation', '[*:1]~[D1]>>[*:1]', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2')","tensor(0.1493, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1cc(O)c(-c2cc(-c3ccc([N+]([O-])O)cc3)no2)c2c1OC(C)(C)CC2,115
"[0.6182190854545455, 0.17546666666666655, 0.9265714285714286, 0.6644133333333335]","tensor(0.1274, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12310964191769566,117.0,"('crossover', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1274, dtype=torch.float64)","tensor(5.8663e-05, dtype=torch.float64)",CN(CC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,117
"[0.1486097369090909, 0.52902, 0.5157142857142857, 0.3394077777777781]","tensor(0.0292, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09498084533444595,119.0,"('crossover', 'COc1ccc(N2CCN(c3cc(-c4ccc([N+](=O)[O-])cc4)no3)CC2)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1162, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1C1SC(=O)NC1=O,119
"[0.20329746476363636, 0.50985, 0.5625714285714286, 0.42550222222222245]","tensor(0.1300, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11199391983829696,121.0,"('crossover', 'COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1300, dtype=torch.float64)","tensor(5.6881e-05, dtype=torch.float64)",CCCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1,121
"[0.24878503758787895, 0.27104999999999996, 0.442, 0.46330777777777804]","tensor(0.0476, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10477926187291257,125.0,"('crossover', 'COc1ccc(N2CCN(c3c(C)c(CO)c4c(c3C)CC(C)(CO)O4)CC2)cc1', 'Cc1oc(O)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1340, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",COc1ccc(N2CCN(C3SC(=O)NC3=O)CC2)cc1,125
"[0.4672071463030303, 0.9905400000000008, 0.4622857142857143, 0.7565977777777781]",,[0 0 0 ... 0 0 0],0.14225206988301,,"('database', 'no reaction', 'no parent')",,,COc1ccc(-c2cc(-c3c(O)c(C)c(C)c4c3CCC(C)(C)O4)on2)cc1,130
"[0.4063453849212122, 0.6090866666666667, 0.7485, 0.5972577777777783]","tensor(0.1287, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11640344328716665,133.0,"('crossover', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1287, dtype=torch.float64)","tensor(4.8800e-05, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1CCC(CC1SC(=O)NC1=O)=NO,133
"[0.42797190363636345, 0.6737800000000004, 0.2567142857142857, 0.7940422222222229]","tensor(0.1425, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.14294385485271086,134.0,"('crossover', 'Cc1oc(-c2ccccc2)nc1CCC(=NBr)c1ccc(CC2SC(=O)NC2=O)cc1', 'COc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1')","tensor(0.1425, dtype=torch.float64)","tensor(0.0003, dtype=torch.float64)",Cc1ccc(N2CCN(c3c(C)c(C)c4c(c3C)CC(CO)O4)CC2)cc1,134
"[0.27602473749090906, 0.6373866666666669, 0.5157142857142857, 0.49479666666666716]","tensor(0.1267, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10660837496971119,140.0,"('crossover', 'Cc1oc(-c2ccccc2)nc1CCC(=NO)c1ccc(CC2SC(=O)NC2=O)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1267, dtype=torch.float64)","tensor(4.8224e-05, dtype=torch.float64)",Cc1oc(-c2ccccc2)nc1CCCC1SC(=O)NC1=O,140
"[0.6606907523151516, 0.24048333333333324, 0.9265714285714286, 0.7157133333333335]","tensor(0.1272, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12935998084789188,146.0,"('crossover', 'COc1ccc(CN2CCN(c3c(C)c(C)c4c(c3C)CC(C)(C)O4)CC2)cc1', 'Cc1oc(-c2ccccc2)nc1CN(C)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.1272, dtype=torch.float64)","tensor(5.9968e-05, dtype=torch.float64)",CN(CCC1SC(=O)NC1=O)S(=O)(=O)c1ccc(CC2SC(=O)NC2=O)cc1,146
"[0.2852405960848485, 0.6543733333333336, 0.7477142857142858, 0.47837000000000024]","tensor(0.0164, dtype=torch.float64)",[0 0 0 ... 0 1 0],0.11032204882225072,148.0,"('crossover', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2', 'Cc1c(C)c2c(c(-c3cc(-c4ccc([N+]([O-])O)cc4)no3)c1O)CCC(C)(C)O2')","tensor(0.1209, dtype=torch.float64)","tensor(0.0002, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc([N+]([O-])O)no3)c1O)CCC(C)(C)O2,148
"[0.04564663061818185, 0.1418033333333333, 0.6872857142857143, 0.18769888888888916]","tensor(0.1271, dtype=torch.float64)",[0 0 0 ... 1 0 0],0.0829956492554663,149.0,"('crossover', 'COc1ccc(CC2COc3c(OC)c(O)c(C)c(O)c3C2=O)cc1', 'Cc1c(C)c2c(c(-c3cc(-c4ccc(O)cc4)on3)c1O)CCC(C)(C)O2')","tensor(0.1271, dtype=torch.float64)","tensor(6.3335e-05, dtype=torch.float64)",COc1c(O)c(C)c(O)c2c1OCC(O)C2=O,149
