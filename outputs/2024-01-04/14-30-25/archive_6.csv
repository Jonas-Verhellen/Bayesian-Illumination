descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.29720066298181813, 0.23796666666666658, 0.4388571428571429, 0.551137777777778]","tensor(0.0001, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1664811451409802,0,"('crossover', 'Cc1ccc(CCO)cc1C(=O)NCC1SC(=S)NC1=O', 'Cc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1')","tensor(0.1534, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",CN(C)c1ccc(CC(=O)NCC2SC(=S)NC2=O)cc1,0
"[0.26110114215757574, 0.4934316666666669, 0.5458571428571428, 0.5766744444444449]","tensor(0.0172, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21417069518226034,2,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCO)n1)O2', 'Cc1ccc(C(=O)NCc2ccc(N(C)C=N)cc2)cc1O')","tensor(0.1946, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(C(=O)NCc2ccc(N(C)C=N)cc2)cc1CO,2
"[0.29120289160000024, 0.5341733333333335, 0.25414285714285717, 0.603496666666667]","tensor(0.0021, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12965231412749337,4,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)N(C)C')","tensor(0.1300, dtype=torch.float64)","tensor(0.0031, dtype=torch.float64)",Cc1cc(C=C2SC(=S)NC2=O)cc(C)c1N(C)N(C)C,4
"[0.2277193712121213, 0.42044999999999993, 0.5200000000000001, 0.512125555555556]","tensor(1.4097e-24, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.17776153060944508,13,"('crossover', 'COc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1', 'COc1c(C)c(C)c2c(c1CCc1ccc(O)c(O)c1)CCC(C)(C)O2')","tensor(0.1466, dtype=torch.float64)","tensor(0.0017, dtype=torch.float64)",CN(C)c1ccc(CNC(=O)Cc2ccc(O)c(O)c2)cc1,13
"[0.6732811879636366, 0.7479766666666671, 0.7780000000000001, 0.8360033333333339]","tensor(0.0096, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3830611702590584,14,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2')","tensor(0.3750, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCC3SN(O)C3=O)n1)O2,14
"[0.8186650598181818, 0.9290266666666674, 0.6994285714285715, 0.9445422222222226]","tensor(0.3140, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.20927288584180653,18,"('mutation', '[*;!H0;!R:1]>>[*:1]-Cl', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2')","tensor(0.3140, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(OCl)C3=O)n1)O2,18
"[0.6278276556848483, 0.6623933333333336, 0.8193571428571429, 0.8152322222222228]","tensor(1.4226e-38, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.4067553257744633,21,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2')","tensor(0.3821, dtype=torch.float64)","tensor(0.0009, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2,21
"[0.2792387559636364, 0.1677616666666665, 0.823857142857143, 0.49185777777777795]","tensor(0.0115, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.247776684364908,24,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCO)n1)O2', 'Cc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C=N)cc1')","tensor(0.2120, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CN(C=N)c1ccc(CNC(=O)Cc2noc(CCO)n2)cc1,24
"[0.5003023959878786, 0.3075733333333333, 0.8710000000000001, 0.6194388888888892]","tensor(0.1535, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16175754458329142,27,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1nc(CN(C)S(=O)(=O)c2ccc(CC3NC(=O)NC3=O)cc2)c(C)o1')","tensor(0.1535, dtype=torch.float64)","tensor(0.0017, dtype=torch.float64)",Cc1nc(CN(C)S(=O)(=O)c2ccc(CC3=NC(=O)NC3=O)cc2)c(C)o1,27
"[0.6187037192242425, 0.5651766666666669, 0.6650714285714286, 0.8620611111111115]","tensor(1.2482e-25, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.33639668644065535,37,"('crossover', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2')","tensor(0.2342, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C,37
"[0.6671731574666668, 0.7001933333333336, 0.8182142857142858, 0.8392166666666673]","tensor(0.0445, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.40411557397647535,38,"('crossover', 'CNC(C)c1cc(N(C)c2c(C)cc(CC3SC(=S)NC3=O)cc2C)ccc1O', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SC(=O)NC3=O)n1)O2')","tensor(0.3040, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SC(=O)NC3=O)n1)O2,38
"[0.5006386112242426, 0.902553333333334, 0.231, 0.8547355555555561]","tensor(0.0259, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18188134299537884,40,"('crossover', 'Cc1c(C)c2c(c(C)c1N)CC(C)(Cc1ccc(F)cc1)O2', 'Cc1ccc(CO)cc1C(=O)NCc1ccc(N(C)C)cc1')","tensor(0.1694, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",Cc1ccc(CCc2ccc(F)cc2)cc1C(=O)NCc1ccc(N(C)C)cc1,40
"[0.3246582476969696, 0.7256600000000003, 0.6859285714285714, 0.5205700000000004]","tensor(0.1205, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1296814865932035,42,"('crossover', 'Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1O)CCC(C)O2', 'Cc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1')","tensor(0.1205, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1C)CCC(C)O2,42
"[0.40637942546666683, 0.414645, 0.8012857142857143, 0.5996822222222224]","tensor(0.0139, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3232048479253841,44,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SC(=O)NC3=O)n1)O2', 'CN(C=N)c1ccc(CNC(=O)CC2SC(=O)NC2=O)cc1')","tensor(0.2257, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1,44
"[0.34910255986666655, 0.9246633333333344, 0.3549285714285714, 0.6759622222222228]","tensor(7.7928e-34, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.274647777654105,50,"('crossover', 'Cc1cc(CCC2CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O', 'CC=Cc1noc(CCc2ccc(O)c(O)c2)n1')","tensor(0.2377, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Cc1cc(CCCC2CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O,50
"[0.07911888837575753, 0.39186666666666664, 0.25414285714285717, 0.38247444444444484]","tensor(0.0402, dtype=torch.float64)",[0 0 0 ... 0 0 1],0.11662959225945772,51,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2', 'CN(C)c1ccc(CNC(=O)c2ccc(N(C)C=S)cc2)cc1')","tensor(0.1429, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CN(C=S)C(=O)NCc1ccc(N(C)C)cc1,51
"[0.5672183750181818, 0.6961933333333338, 0.49742857142857144, 0.8734833333333338]","tensor(1.3636e-185, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3750100639240099,53,"('crossover', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C', 'Cc1cc(CCC2(C)CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O')","tensor(0.2239, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C,53
"[0.47636512330909114, 0.43963166666666664, 0.7537142857142858, 0.7735711111111115]","tensor(0.0217, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2326127400860821,60,"('mutation', '[*;!H0;!R:1]>>[*:1]-C', 'Cc1ccc(CO)cc1C(=O)NCC(=O)NCc1ccc(N(C)C=N)cc1')","tensor(0.2130, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(C(C)O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C=N)cc1,60
"[0.4547950508606062, 0.4421283333333334, 0.6793571428571429, 0.6797044444444447]","tensor(0.0655, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.33102483017676737,61,"('crossover', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1')","tensor(0.2878, dtype=torch.float64)","tensor(0.0012, dtype=torch.float64)",CN(C=N)c1ccc(Cc2noc(CCC3SC(=S)NC3=O)n2)cc1,61
"[0.13350987943030318, 0.14951166666666665, 0.8012857142857143, 0.2747044444444446]","tensor(0.0538, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13292274492664813,65,"('crossover', 'Cc1nc(CN(C)S(=O)(=O)c2ccc(CC3=NC(=O)NC3=O)cc2)c(C)o1', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1')","tensor(0.1796, dtype=torch.float64)","tensor(0.0021, dtype=torch.float64)",CN(C=N)c1noc(CCC2SC(=O)NC2=O)n1,65
"[0.46721736184242413, 0.8499766666666674, 0.5, 0.6974255555555563]","tensor(3.9115e-08, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2651152324978707,67,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2', 'Cc1cc(CCC2(C)CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O')","tensor(0.2490, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCCCCC1SN(O)C1=O)O2,67
"[0.7066629589090908, 0.7446433333333338, 0.8595714285714285, 0.9210455555555561]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.40943282237303424,72,"('mutation', '[#8:1]>>[#7:1]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2')","tensor(0.3134, dtype=torch.float64)","tensor(0.0012, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2,72
"[0.2790406434545456, 0.4588366666666667, 0.6077857142857143, 0.4613522222222225]","tensor(0.0885, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16228093203296773,73,"('crossover', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1')","tensor(0.2355, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1,73
"[0.7036470529454546, 0.5260433333333334, 0.7278571428571429, 0.9804722222222226]","tensor(4.3384e-194, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3200874336473921,78,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2580, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2O)cc1C,78
"[0.21540326664242415, 0.16796999999999998, 0.6419285714285715, 0.38126111111111133]","tensor(0.0604, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15582531383650938,81,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2', 'Cc1ccc(CCO)cc1C(=O)NCC1SC(=S)NC1=O')","tensor(0.1960, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCC1SN(O)C1=O,81
"[0.30951676755151514, 0.5960000000000002, 0.25414285714285717, 0.6715466666666668]","tensor(0.0045, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18131311081743381,82,"('crossover', 'COc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1')","tensor(0.1520, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CN(C)c1ccc(CNC(=O)c2ccc(N(C)C=S)cc2)cc1,82
"[0.4067299751151514, 0.6197433333333338, 0.6742857142857144, 0.671613333333334]","tensor(2.0705e-39, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.32726315684685636,83,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2')","tensor(0.2798, dtype=torch.float64)","tensor(0.0013, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCO)n1)O2,83
"[0.5215545400484848, 0.15134999999999998, 0.6492857142857144, 0.7303744444444449]","tensor(0.1970, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2334911360364627,86,"('crossover', 'COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=O)NC1=O', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C=S)c1')","tensor(0.1970, dtype=torch.float64)","tensor(0.0009, dtype=torch.float64)",COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=S)NC1=O,86
"[0.7399004301939396, 0.3797566666666665, 0.89, 0.9549933333333336]","tensor(1.1021e-18, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2960432300646814,88,"('crossover', 'Cc1ccc(CCO)cc1C(=O)NCC1SC(=S)NC1=O', 'Cc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1')","tensor(0.2497, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(CCO)cc1CNC(=O)CNC(=O)c1cc(CC2SC(=O)NC2=O)ccc1C,88
"[0.7036470529454546, 0.42005999999999993, 0.7278571428571429, 0.9761500000000004]","tensor(0.0483, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.32434662773987166,90,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2666, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(O)NC2=O)cc1C,90
"[0.2248137243636365, 0.664776666666667, 0.31214285714285717, 0.5739622222222227]","tensor(0.0913, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18797800569412923,98,"('crossover', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2443, dtype=torch.float64)","tensor(0.0021, dtype=torch.float64)",Cc1ccc(CCO)cc1CN(C)c1c(C)cc(O)cc1C,98
"[0.22162699414545461, 0.836343333333334, 0.21042857142857144, 0.49818666666666694]","tensor(0.0274, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14109712339926764,102,"('crossover', 'Cc1c(N)c(C(C)C)c(C)c2c1CC(C)(CCc1ccc(F)cc1)O2', 'Cc1ccc(C(=O)C2=CCc3c(C)c(O)c(C)c(C)c3O2)cc1NC(=O)O')","tensor(0.1621, dtype=torch.float64)","tensor(0.0029, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CC=C(Cc1ccc(F)cc1)O2,102
"[0.07598597100606061, 0.4510333333333334, 0.5670000000000001, 0.240217777777778]","tensor(0.0049, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.142087487526263,105,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'C=Cc1noc(CCc2ccc(O)c(O)c2)n1')","tensor(0.1450, dtype=torch.float64)","tensor(0.0013, dtype=torch.float64)",Oc1ccc(CCc2nc(C=CF)no2)cc1O,105
"[0.5217342654424242, 0.8413100000000006, 0.5, 0.7005255555555563]","tensor(0.0688, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2594629819574669,108,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCCCCC1SN(O)C1=O)O2')","tensor(0.2465, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)CCC1SN(O)C1=O)O2,108
"[0.3521681598060604, 0.9957566666666676, 0.2517857142857143, 0.6875044444444449]","tensor(0.1719, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.16594550106905145,110,"('crossover', 'Cc1cc(CC2SC(=O)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'Cc1c(C)c2c(c(C)c1N)CC(C)(CCc1ccc(F)cc1)O2')","tensor(0.1719, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(N)c(C(C)C)c(C)c2c1CC(C)(CCc1ccc(F)cc1)O2,110
"[0.43073325082424235, 0.8195800000000005, 0.6847142857142857, 0.687664444444445]","tensor(4.0305e-141, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.27186844088747025,115,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1ccc(C(=O)C2CCc3c(C)c(O)c(C)c(C)c3O2)cc1NC(=O)O')","tensor(0.2087, dtype=torch.float64)","tensor(0.0024, dtype=torch.float64)",Cc1ccc(C(=O)C2=CCc3c(C)c(O)c(C)c(C)c3O2)cc1NC(=O)O,115
"[0.47313891465454544, 0.12386666666666668, 0.7712142857142857, 0.6503522222222227]","tensor(6.8988e-06, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21847472346734767,117,"('crossover', 'Cc1ccc(C(=O)C2(C)CCc3c(C)c(O)c(C)c(C)c3O2)cc1NC(=O)O', 'COc1ccc(CCO)cc1C(=O)NCN(C)CC1SC(=O)NC1=O')","tensor(0.1897, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=O)NC1=O,117
"[0.00943948409696969, 0.6681000000000004, 0.13185714285714287, 0.3238111111111116]","tensor(0.0295, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10558840814210418,118,"('crossover', 'COc1ccc(-c2ccc(CC3SC(=O)NC3=O)cc2)cc1', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C)cc2)c1')","tensor(0.1252, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",COCc1ccc(-c2ccc(OC)cc2)cc1,118
"[0.10641240112727281, 0.5315333333333335, 0.5670000000000001, 0.3422511111111114]","tensor(0.0050, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15272457898688765,119,"('crossover', 'CC=Cc1noc(CCc2ccc(O)c(O)c2)n1', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(O)C3=O)n1)O2')","tensor(0.1527, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CC=Cc1noc(CCCc2ccc(O)c(O)c2)n1,119
"[0.1489181085333333, 0.32214499999999996, 0.6160000000000001, 0.40138333333333365]","tensor(3.3130e-22, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.24792754265881217,121,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCO)n1)O2', 'CN(C=N)c1ccc(CNC(=O)NC(=O)c2ccc(O)c(O)c2)cc1')","tensor(0.1938, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",CN(C=N)c1ccc(CCc2noc(CCO)n2)cc1,121
"[0.5034285610666666, 0.18234499999999998, 0.9389999999999998, 0.6959644444444447]","tensor(0.0269, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.24283245744806184,122,"('crossover', 'COc1ccc(CCO)cc1C(=O)NCN(C)CC1SC(=O)NC1=O', 'CN(C=N)c1ccc(CNC(=O)CC2SC(=O)NC2=O)cc1')","tensor(0.1998, dtype=torch.float64)","tensor(0.0010, dtype=torch.float64)",CN(C=N)c1ccc(CNC(=O)CCNC(=O)CC2SC(=O)NC2=O)cc1,122
"[0.25171309015757576, 0.38395333333333337, 0.41571428571428576, 0.5001100000000004]","tensor(0.0418, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13684284067886124,125,"('crossover', 'CCc1ccc(C)c(C(=O)NCc2ccc(N(C)C)cc2)c1', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1')","tensor(0.1748, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CCc1ccc(C)c(C(=O)NCC2SC(=S)NC2=O)c1,125
"[0.5731623335515151, 0.9098900000000008, 0.37550000000000006, 0.9110944444444449]","tensor(0.2469, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.311406585932129,130,"('mutation', '[#8:1]>>[#16:1]', 'Cc1cc(CC2SC(=O)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1')","tensor(0.2469, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1,130
"[0.5883378542424244, 0.6179433333333334, 0.7780000000000001, 0.733403333333334]","tensor(0.0526, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.38605068658642316,133,"('crossover', 'Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1O)CCC(C)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.3156, dtype=torch.float64)","tensor(0.0013, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CC3SN(O)C3=O)n1)O2,133
"[0.3549702998303031, 0.680166666666667, 0.29692857142857143, 0.6893577777777781]","tensor(0.1667, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1778107141289067,134,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=S', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C)cc2)c1')","tensor(0.1667, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1,134
"[0.663939366690909, 0.9065233333333341, 0.37550000000000006, 0.9997722222222223]","tensor(0.2855, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.31696156984397506,135,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=S', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1')","tensor(0.2855, dtype=torch.float64)","tensor(0.0006, dtype=torch.float64)",Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C=S)c1,135
"[0.29733069439999993, 0.5899100000000002, 0.5, 0.49222555555555597]","tensor(0.0924, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15593951683964535,140,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCCCCC1SN(O)C1=O)O2')","tensor(0.2202, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CC1SN(O)C1=O)O2,140
"[0.3579297595272728, 0.6429400000000002, 0.8558571428571429, 0.5198922222222225]","tensor(0.0207, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13080519104362542,148,"('mutation', '[*;H3;!R:1]>>[*:1]#N', 'Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1C)CCC(C)O2')","tensor(0.1485, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1C)CCC(C#N)O2,148
"[0.09111443113939392, 0.3237366666666667, 0.6077857142857143, 0.23897444444444477]","tensor(0.0311, dtype=torch.float64)",[0 0 0 ... 0 0 1],0.12594093445634222,149,"('crossover', 'Cc1c(C)c2c(c(Cc3noc(CCCCC4SC(=O)NC4=O)n3)c1O)CCC(C)(C)O2', 'COc1c(C)c(C)c2c(c1CCc1ccc(O)c(O)c1)CCC(C)(C)O2')","tensor(0.1507, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1noc(CCCCC2SC(=O)NC2=O)n1,149
