descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.36090206818181825, 0.14589999999999997, 0.6535000000000001, 0.5293611111111116]","tensor(0.0344, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2305842591589014,0,"('crossover', 'COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=S)NC1=O', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCO)n1)O2')","tensor(0.2420, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",CN(CCCc1noc(CCCO)n1)CC1SC(=S)NC1=O,0
"[0.3188047759757575, 0.5420433333333334, 0.7156428571428571, 0.5881088888888893]","tensor(0.0450, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.250381801748222,2,"('crossover', 'Cc1cc(CCCC2CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2')","tensor(0.2592, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CN)n1)O2,2
"[0.29120289160000024, 0.5341733333333335, 0.25414285714285717, 0.603496666666667]","tensor(0.0021, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12965231412749337,4,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)N(C)C')","tensor(0.1300, dtype=torch.float64)","tensor(0.0031, dtype=torch.float64)",Cc1cc(C=C2SC(=S)NC2=O)cc(C)c1N(C)N(C)C,4
"[0.018402811842424233, 0.26150333333333337, 0.35235714285714287, 0.19431000000000026]","tensor(0.1437, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10111691186675595,7,"('crossover', 'Oc1ccc(CCc2nc(C=CF)no2)cc1O', 'Cc1ccc(CCO)cc1S(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C')","tensor(0.1437, dtype=torch.float64)","tensor(0.0026, dtype=torch.float64)",Cc1ccc(CCO)cc1S(=O)NCF,7
"[0.23667923570909097, 0.5117116666666667, 0.5232857142857144, 0.5111933333333335]","tensor(0.0164, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19390166606051643,13,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'CN(C=N)c1ccc(CCCCC2SC(=O)NC2=O)cc1')","tensor(0.2006, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CN(C=N)c1ccc(CC=CCC2SC(=O)NC2=O)cc1,13
"[0.7489705538060607, 0.7763550000000005, 0.7221428571428572, 0.9883600000000005]","tensor(9.8960e-82, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.4324110093605927,14,"('crossover', 'CN(C=NN)c1ccc(CCc2noc(CCC3SC(=S)NC3=O)n2)cc1', 'Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.3983, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCC3SC(=S)NC3=O)n1)O2,14
"[0.7578267262545453, 0.9617433333333342, 0.5, 0.7879700000000006]","tensor(0.0344, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2737194057744807,18,"('mutation', '[*;!H0;!R:1]>>[*:1]-Br', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)CCC1SN(O)C1=O)O2')","tensor(0.2437, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)(Br)CCC1SN(O)C1=O)O2,18
"[0.6641912920484847, 0.679626666666667, 0.8595714285714285, 0.8697455555555561]","tensor(0.0041, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.42402744447684193,21,"('crossover', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2', 'CN(C)c1ccc(CC(=O)NCC2SC(=S)NC2=O)cc1')","tensor(0.4109, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCC3SC(=O)NC3=O)n1)O2,21
"[0.3701798610666666, 0.19177833333333325, 0.9055714285714286, 0.5513777777777781]","tensor(1.0487e-44, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2706449930804769,24,"('mutation', '[*;!H0;!R:1]>>[*:1]-O', 'CN(C=N)c1ccc(CCNC(=O)Cc2noc(CCO)n2)cc1')","tensor(0.2427, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CN(C=N)c1ccc(CCN(O)C(=O)Cc2noc(CCO)n2)cc1,24
"[0.5427740628484846, 0.31465666666666664, 0.8710000000000001, 0.673516666666667]","tensor(0.0016, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.17843639817136484,27,"('crossover', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCO)n1)O2', 'Cc1nc(CN(C)S(=O)(=O)c2ccc(CC3=NC(=O)NC3=O)cc2)c(C)o1')","tensor(0.1631, dtype=torch.float64)","tensor(0.0018, dtype=torch.float64)",Cc1nc(CCN(C)S(=O)(=O)c2ccc(CC3=NC(=O)NC3=O)cc2)c(C)o1,27
"[0.6670628983515152, 0.2973333333333333, 0.8955000000000001, 0.8172922222222226]","tensor(0.1910, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3363088070782028,33,"('crossover', 'Cc1nc(CN(C)S(=O)(=O)c2ccc(CC3=NC(=O)NC3=O)cc2)c(C)o1', 'COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SNC1=O')","tensor(0.1910, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",COc1ccc(CCO)cc1CN(C)S(=O)(=O)c1ccc(CC2=NC(=O)NC2=O)cc1,33
"[0.2760744314666667, 0.7211833333333337, 0.231, 0.5630466666666668]","tensor(0.1684, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18499250651687327,35,"('mutation', '[*:1]~[D3](~[*;!H0:2])~[*:3]>>[*:1]-[*:2]-[*:3]', 'CN(C)c1ccc(CNC(=O)c2ccc(N(F)C=S)cc2)cc1')","tensor(0.1684, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CCc1ccc(CNC(=O)c2ccc(N(F)C=S)cc2)cc1,35
"[0.5247467081575757, 0.6447900000000004, 0.49742857142857144, 0.8208500000000004]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3827574531091902,37,"('mutation', '[*:1]~[D1]>>[*:1]', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2493, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",Cc1cc(CC2SC(=O)NC2=O)cc(C)c1N(C)Cc1cccc(CCO)c1,37
"[0.6641912920484847, 0.7316383333333336, 0.803857142857143, 0.8538244444444449]","tensor(1.0000e-275, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.41283160524917856,38,"('mutation', '[*;!H0;!R:1]~[*:2]>>[*:1]=C-[*:2]', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.3555, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2,38
"[0.5853681790060606, 0.9580000000000007, 0.29692857142857143, 0.9719800000000003]","tensor(0.0001, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.186745003955353,40,"('crossover', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=S)NC3=O)n2)cc1', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1')","tensor(0.1824, dtype=torch.float64)","tensor(0.0009, dtype=torch.float64)",CCc1ccc(OC)c(C(=O)NCc2ccc(-c3ccc(N(C)C=S)cc3)cc2)c1,40
"[0.37009200767272726, 0.7666216666666671, 0.6543571428571429, 0.5816600000000005]","tensor(0.0726, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18206124222053172,42,"('crossover', 'Cc1c(C)c2c(c(C)c1N=N)CCC(C)(CCc1noc(CCCO)n1)O2', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2023, dtype=torch.float64)","tensor(0.0021, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N=N)CCC(C)(CC1SC(=O)NC1=O)O2,42
"[0.4488510923272727, 0.4796616666666667, 0.8012857142857143, 0.6509822222222225]","tensor(1.1041e-130, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3477324486012689,44,"('crossover', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1', 'CN(C=N)c1ccc(CCNC(=O)Cc2noc(CCO)n2)cc1')","tensor(0.3038, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",CN(C=N)c1ccc(Cc2noc(CCCC3SC(=O)NC3=O)n2)cc1,44
"[0.34910255986666655, 0.9246633333333344, 0.3549285714285714, 0.6759622222222228]","tensor(7.7928e-34, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.274647777654105,50,"('crossover', 'Cc1cc(CCC2CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O', 'CC=Cc1noc(CCc2ccc(O)c(O)c2)n1')","tensor(0.2377, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Cc1cc(CCCC2CCc3c(C)c(O)c(C)c(C)c3O2)ccc1O,50
"[0.03363131555151513, 0.4343666666666666, 0.231, 0.3404188888888893]","tensor(0.0345, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11976876198243842,51,"('crossover', 'CCc1ccc(C)c(C(=O)NCC2SC(=S)NC2=O)c1', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1')","tensor(0.1512, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CCC(=O)NCc1ccc(N(C)C=S)cc1,51
"[0.5248569672727273, 0.6691100000000003, 0.3755, 0.8676055555555561]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.37894684568801706,53,"('mutation', '[*:1]~[D1]>>[*:1]', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2808, dtype=torch.float64)","tensor(0.0017, dtype=torch.float64)",Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SCNC2=O)cc1C,53
"[0.5427542905454545, 0.3570166666666667, 0.7831428571428571, 0.7741233333333336]","tensor(5.3401e-29, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3519672712929387,60,"('crossover', 'CN(C=NN)c1ccc(Cc2noc(CCC3SC(=S)NC3=O)n2)cc1', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1Br')","tensor(0.2942, dtype=torch.float64)","tensor(0.0012, dtype=torch.float64)",CN(C=NN)c1ccc(CCc2noc(CCC3SC(=S)NC3=O)n2)cc1,60
"[0.46079282224242446, 0.36571166666666666, 0.7452857142857144, 0.6404600000000003]","tensor(2.7967e-198, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3333171796122683,61,"('crossover', 'CN(C=N)c1ccc(Cc2noc(CCOC3SC(=S)NC3=O)n2)cc1', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCC3SC(=O)NC3=O)n1)O2')","tensor(0.2829, dtype=torch.float64)","tensor(0.0017, dtype=torch.float64)",CN(C=N)c1ccc(Cc2noc(COC3SC(=S)NC3=O)n2)cc1,61
"[0.21223492353939402, 0.10789499999999996, 0.8672142857142858, 0.30689333333333335]","tensor(0.0233, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16018619287076222,65,"('mutation', '[*;H3;!R:1]>>[*:1]#C', 'CN(C=N)Oc1noc(CCC2SC(=O)NC2=O)n1')","tensor(0.1675, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",C#CN(C=N)Oc1noc(CCC2SC(=O)NC2=O)n1,65
"[0.3970285178303033, 0.6012866666666669, 0.3529285714285715, 0.5160522222222225]","tensor(0.1634, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12037954935488253,66,"('crossover', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1Br', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1')","tensor(0.1634, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1Br,66
"[0.48556527833939384, 0.7540050000000006, 0.6587857142857143, 0.7615055555555562]","tensor(3.8362e-07, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3284777939463115,67,"('crossover', 'Cc1c(C)c2c(c(C)c1CO)CCC(C)(CCc1noc(CCCO)n1)O2', 'Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.3109, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCCCO)n1)O2,67
"[0.39756386063030313, 0.9008000000000007, 0.8612142857142857, 0.6031711111111115]","tensor(0.2757, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.28848126297794363,70,"('crossover', 'CN(C=N)c1ccc(CCc2noc(CCO)n2)cc1', 'Cc1c(C)c2c(c(C)c1N=N)CCC(C)(CCc1noc(CCCO)n1)O2')","tensor(0.2757, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N=N)CCC(C)(CCc1noc(CN=N)n1)O2,70
"[0.7066629589090908, 0.7446433333333338, 0.8595714285714285, 0.9210455555555561]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.40943282237303424,72,"('mutation', '[#8:1]>>[#7:1]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2')","tensor(0.3134, dtype=torch.float64)","tensor(0.0012, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2,72
"[0.2790406434545456, 0.4588366666666667, 0.6077857142857143, 0.4613522222222225]","tensor(0.0885, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16228093203296773,73,"('crossover', 'Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'CN(C=N)c1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1')","tensor(0.2355, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1ccc(Cc2noc(CCC3SC(=O)NC3=O)n2)cc1,73
"[0.6792251464969699, 0.5455766666666668, 0.6650714285714286, 0.8851488888888893]","tensor(7.7997e-134, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.33837491772875544,78,"('mutation', '[#6:1]>>[#16:1]', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C')","tensor(0.2627, dtype=torch.float64)","tensor(0.0024, dtype=torch.float64)",Cc1ccc(CCO)cc1S(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C,78
"[0.21540326664242415, 0.16796999999999998, 0.6419285714285715, 0.38126111111111133]","tensor(0.0604, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15582531383650938,81,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2', 'Cc1ccc(CCO)cc1C(=O)NCC1SC(=S)NC1=O')","tensor(0.1960, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCC1SN(O)C1=O,81
"[0.26728539122424255, 0.6292266666666669, 0.31214285714285717, 0.6212733333333337]","tensor(0.0034, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21066640766204,82,"('crossover', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C', 'Cc1ccc(CCO)cc1S(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C')","tensor(0.1953, dtype=torch.float64)","tensor(0.0009, dtype=torch.float64)",Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CO)cc1C,82
"[0.49465517425454525, 0.6118433333333336, 0.6329285714285715, 0.7424733333333339]","tensor(2.1953e-126, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.36047008318779655,83,"('crossover', 'Cc1c(C)c2c(c(C)c1CO)CCC(C)(CCc1noc(CCCO)n1)O2', 'Cc1c(C)c2c(c(C)c1CO)CCC(C)(CCc1noc(CCCO)n1)O2')","tensor(0.3209, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1CCO)CCC(C)(CCc1noc(CCCO)n1)O2,83
"[0.5640262069090912, 0.21636666666666668, 0.6492857142857144, 0.781674444444445]","tensor(5.4576e-07, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.24741259155601242,86,"('crossover', 'COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=S)NC1=O', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCO)n1)O2')","tensor(0.2311, dtype=torch.float64)","tensor(0.0008, dtype=torch.float64)",COc1ccc(CCCO)cc1C(=O)NCCN(C)CC1SC(=S)NC1=O,86
"[0.7399004301939396, 0.3797566666666665, 0.89, 0.9549933333333336]","tensor(1.1021e-18, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2960432300646814,88,"('crossover', 'Cc1ccc(CCO)cc1C(=O)NCC1SC(=S)NC1=O', 'Cc1ccc(CC2SC(=O)NC2=O)cc1C(=O)NCC(=O)NCc1ccc(N(C)C)cc1')","tensor(0.2497, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1ccc(CCO)cc1CNC(=O)CNC(=O)c1cc(CC2SC(=O)NC2=O)ccc1C,88
"[0.7036470529454546, 0.42005999999999993, 0.7278571428571429, 0.9761500000000004]","tensor(0.0483, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.32434662773987166,90,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.2666, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Cc1ccc(CCO)cc1C(=O)NCN(C)c1c(C)cc(CC2SC(O)NC2=O)cc1C,90
"[0.5641705065696972, 0.3922866666666667, 0.3663571428571429, 0.8570522222222231]","tensor(0.0347, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14546813297991154,96,"('crossover', 'CN(C=N)c1ccc(Cc2noc(CCOC3SC(=S)NC3=O)n2)cc1', 'Cc1cc(C=C2SC(=S)NC2=O)cc(N(C)N(C)C)c1N(C)N(C)C')","tensor(0.1600, dtype=torch.float64)","tensor(0.0028, dtype=torch.float64)",Cc1cc(CCOC2SC(=S)NC2=O)cc(N(C)N(C)C)c1N(C)N(C)C,96
"[0.24278726620606067, 0.5490450000000001, 0.5232857142857144, 0.5122377777777782]","tensor(0.0189, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21807631263403232,98,"('crossover', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCC3SC(=O)NC3=O)n1)O2', 'Cc1ccc(C(=O)NCc2ccc(N(C)C=N)cc2)cc1CO')","tensor(0.2068, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",CN(C=N)c1ccc(CCCCC2SC(=O)NC2=O)cc1,98
"[0.22773502464242432, 0.8154766666666672, 0.21042857142857144, 0.5017644444444449]","tensor(0.0463, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14523804467522763,102,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c2c(c(C)c1O)CC=C(Cc1ccc(F)cc1)O2')","tensor(0.1874, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(Cc1ccc(F)cc1)O2,102
"[0.0820940015030303, 0.37966666666666665, 0.5670000000000001, 0.23507333333333363]","tensor(0.0469, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14556807119711482,105,"('mutation', '[*:1]!-[*:2]>>[*:1]-[*:2]', 'Oc1ccc(CCc2nc(C=CF)no2)cc1O')","tensor(0.1889, dtype=torch.float64)","tensor(0.0015, dtype=torch.float64)",Oc1ccc(CCc2nc(CCF)no2)cc1O,105
"[0.5217342654424242, 0.8413100000000006, 0.5, 0.7005255555555563]","tensor(0.0688, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2594629819574669,108,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCCCCC1SN(O)C1=O)O2')","tensor(0.2465, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)CCC1SN(O)C1=O)O2,108
"[0.3521681598060604, 0.9957566666666676, 0.2517857142857143, 0.6875044444444449]","tensor(0.1719, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.16594550106905145,110,"('crossover', 'Cc1cc(CC2SC(=O)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1', 'Cc1c(C)c2c(c(C)c1N)CC(C)(CCc1ccc(F)cc1)O2')","tensor(0.1719, dtype=torch.float64)","tensor(0.0005, dtype=torch.float64)",Cc1c(N)c(C(C)C)c(C)c2c1CC(C)(CCc1ccc(F)cc1)O2,110
"[0.4461095174424241, 0.7997883333333341, 0.7470714285714286, 0.6760055555555561]","tensor(0.0107, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3367410125509428,115,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=N', 'Cc1c(C)c2c(c(C)c1N)CCC(C)(CCc1noc(CCCO)n1)O2')","tensor(0.2826, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1N=N)CCC(C)(CCc1noc(CCCO)n1)O2,115
"[0.43677527829090906, 0.1066333333333334, 0.731, 0.5958388888888894]","tensor(7.1812e-13, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.22328121897772868,117,"('mutation', '[*:1]~[D3](~[*;!H0:2])~[*:3]>>[*:1]-[*:2]-[*:3]', 'COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SC(=O)NC1=O')","tensor(0.2106, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",COc1ccc(CCO)cc1C(=O)NCCN(C)CC1SN(O)C1=O,117
"[0.00943948409696969, 0.6681000000000004, 0.13185714285714287, 0.3238111111111116]","tensor(0.0295, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10558840814210418,118,"('crossover', 'COc1ccc(-c2ccc(CC3SC(=O)NC3=O)cc2)cc1', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C)cc2)c1')","tensor(0.1252, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",COCc1ccc(-c2ccc(OC)cc2)cc1,118
"[0.19735350623030304, 0.5764333333333337, 0.6329285714285715, 0.40170666666666693]","tensor(0.0243, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19036103002208313,119,"('crossover', 'CC=COc1noc(CCCCCCc2ccc(O)c(O)c2)n1', 'CN(C=N)c1ccc(CNC(=O)CCCNC(=O)CC2SC(=O)NC2=O)cc1')","tensor(0.1794, dtype=torch.float64)","tensor(0.0007, dtype=torch.float64)",CC=COc1noc(CCCCc2ccc(O)c(O)c2)n1,119
"[0.19138977539393937, 0.3871616666666666, 0.6160000000000001, 0.45268333333333366]","tensor(0.0089, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.27764568051768923,121,"('crossover', 'CN(C=N)c1ccc(CCc2noc(CCO)n2)cc1', 'CN(C=NN)c1ccc(Cc2noc(CCC3SC(=S)NC3=O)n2)cc1')","tensor(0.2569, dtype=torch.float64)","tensor(0.0013, dtype=torch.float64)",CN(C=N)c1ccc(CCCc2noc(CCO)n2)cc1,121
"[0.5459002279272727, 0.24736166666666656, 0.9389999999999998, 0.7472644444444447]","tensor(1.2990e-105, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2554823206493375,122,"('crossover', 'CN(C=N)c1ccc(CNC(=O)CCNC(=O)CC2SC(=O)NC2=O)cc1', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCCCC3SN(OCl)C3=O)n1)O2')","tensor(0.2181, dtype=torch.float64)","tensor(0.0012, dtype=torch.float64)",CN(C=N)c1ccc(CNC(=O)CCCNC(=O)CC2SC(=O)NC2=O)cc1,122
"[0.2547289961212121, 0.3771616666666667, 0.4672857142857144, 0.5044933333333336]","tensor(0.0563, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19100975207896964,125,"('crossover', 'CN(C=N)c1ccc(Cc2noc(CCOC3SC(=S)NC3=O)n2)cc1', 'Cc1ccc(CCO)cc1CNC(=O)CNC(=O)c1cc(CC2SC(=O)NC2=O)ccc1C')","tensor(0.2350, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",CN(C=N)c1ccc(CCOC2SC(=S)NC2=O)cc1,125
"[0.5731623335515151, 0.9098900000000008, 0.37550000000000006, 0.9110944444444449]","tensor(0.2469, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.311406585932129,130,"('mutation', '[#8:1]>>[#16:1]', 'Cc1cc(CC2SC(=O)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1')","tensor(0.2469, dtype=torch.float64)","tensor(0.0004, dtype=torch.float64)",Cc1cc(CC2SC(=S)NC2=O)cc(C)c1N(C)c1ccc(O)c(C(C)C)c1,130
"[0.5883378542424244, 0.6179433333333334, 0.7780000000000001, 0.733403333333334]","tensor(0.0526, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.38605068658642316,133,"('crossover', 'Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1O)CCC(C)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.3156, dtype=torch.float64)","tensor(0.0013, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCc1noc(CC3SN(O)C3=O)n1)O2,133
"[0.3549702998303031, 0.680166666666667, 0.29692857142857143, 0.6893577777777781]","tensor(0.1667, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1778107141289067,134,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=S', 'CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C)cc2)c1')","tensor(0.1667, dtype=torch.float64)","tensor(0.0011, dtype=torch.float64)",CCc1ccc(OC)c(C(=O)NCc2ccc(N(C)C=S)cc2)c1,134
"[0.7608391689696969, 0.7718733333333337, 0.49742857142857144, 0.9064055555555561]","tensor(0.0102, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3723578263151994,135,"('mutation', '[#6:1]>>[#35:1]', 'Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1C')","tensor(0.3272, dtype=torch.float64)","tensor(0.0014, dtype=torch.float64)",Cc1ccc(CCO)cc1CN(C)c1c(C)cc(CC2SC(=O)NC2=O)cc1Br,135
"[0.6728833925333332, 0.8317100000000006, 0.5, 0.6853700000000005]","tensor(0.0368, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.21704675403251406,138,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)(Br)CCC1SN(O)C1=O)O2', 'Cc1c(C)c2c(c(C)c1C=N)CCC(C)(CCc1noc(CCC3SN(O)C3=O)n1)O2')","tensor(0.2233, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCC(F)(Br)C1SN(O)C1=O)O2,138
"[0.28229683995151517, 0.7064666666666674, 0.6329285714285715, 0.504306666666667]","tensor(6.2432e-06, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19438104542116594,140,"('mutation', '[*;!R:1]~[*:2]>>[*:1]O[*:2]', 'CC=Cc1noc(CCCCCCc2ccc(O)c(O)c2)n1')","tensor(0.1777, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",CC=COc1noc(CCCCCCc2ccc(O)c(O)c2)n1,140
"[0.3579297595272728, 0.6429400000000002, 0.8558571428571429, 0.5198922222222225]","tensor(0.0207, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13080519104362542,148,"('mutation', '[*;H3;!R:1]>>[*:1]#N', 'Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1C)CCC(C)O2')","tensor(0.1485, dtype=torch.float64)","tensor(0.0019, dtype=torch.float64)",Cc1c(C)c2c(c(-c3cc(N(O)C(=O)O)no3)c1C)CCC(C#N)O2,148
"[0.09711220252121221, 0.27713333333333334, 0.6335000000000001, 0.20080555555555568]","tensor(0.0388, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12659157234076826,149,"('crossover', 'Cc1ccc(CCO)cc1CC(=O)NCN(C)c1c(C)cc(C2SN(O)C2=O)cc1C', 'CC=COc1noc(CCCCc2ccc(O)c(O)c2)n1')","tensor(0.1648, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",CC=COc1noc(CCC2SN(O)C2=O)n1,149
