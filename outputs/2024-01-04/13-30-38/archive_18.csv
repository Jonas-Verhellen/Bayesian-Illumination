descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.3126627049333332, 0.5387900000000001, 0.6480714285714286, 0.6148622222222225]","tensor(0.0042, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.22229712245428473,2,"('crossover', 'CONc1ccc(COc2ccc(CCCCO)cc2)cc1', 'Cc1c(O)c(N)c(C)c2c1CCC(COc1ccc(N)cc1)O2')","tensor(0.2132, dtype=torch.float64)","tensor(0.0040, dtype=torch.float64)",Cc1c(CO)c(N)c(C)c2c1CCC(COc1ccc(N)cc1)O2,2
"[0.7055648339272725, 0.9441200000000004, 0.26371428571428573, 0.47635555555555587]","tensor(0.0920, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.08717952499559001,6,"('crossover', 'Cc1c2c(c(OBr)c(OBr)c1OBr)CCC(C)(C(=N)O)O2', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)NC3=O)cc1)O2')","tensor(0.0920, dtype=torch.float64)","tensor(0.0048, dtype=torch.float64)",Cc1c2c(c(OBr)c(OBr)c1OBr)CCC(C)(C)O2,6
"[0.06062163855757576, 0.3262, 0.2963571428571429, 0.16432777777777804]","tensor(0.0207, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11716589738759835,7,"('crossover', 'CONc1ccc(CCOc2ccc(CCCO)cc2)cc1', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CCNBr)cc1)O2')","tensor(0.1321, dtype=torch.float64)","tensor(0.0043, dtype=torch.float64)",OCOc1ccc(CCNBr)cc1,7
"[0.8028409407030301, 0.5878733333333335, 0.6794285714285715, 0.6611933333333339]","tensor(0.0991, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.14011483221677423,10,"('crossover', 'Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(COc1ccc(CO)cc1)C=C2', 'O=C1NC(=O)C(Cc2ccc(OCNOCNBr)cc2)N1')","tensor(0.0991, dtype=torch.float64)","tensor(0.0027, dtype=torch.float64)",Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(COC1NC(=O)NC1=O)C=C2,10
"[0.27618880945454544, 0.49316666666666675, 0.49157142857142855, 0.5189266666666672]","tensor(0.0817, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.29551961934919146,13,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(COc1ccc(CCNOC=O)cc1)O2', 'CONc1ccc(OCC2C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1')","tensor(0.2571, dtype=torch.float64)","tensor(0.0062, dtype=torch.float64)",CONc1ccc(COc2ccc(CCNOC=O)cc2)cc1,13
"[0.6489252845454544, 0.8258100000000006, 0.6061428571428571, 0.8993722222222227]","tensor(4.8314e-11, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.6139623423144214,14,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,14
"[0.2698538077818181, 0.7819066666666673, 0.27635714285714286, 0.38645333333333365]","tensor(0.0068, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11608015981366146,16,"('mutation', '[*:1]~[D4](~[*;!H0:2])(~[*;!H0:3])~[*:4]>>[*:1]-[*:2]-[*:3]-[*:4]', 'CCCC1(C)CCc2c(C)c(O)c(OBr)c(C)c2O1')","tensor(0.1201, dtype=torch.float64)","tensor(0.0065, dtype=torch.float64)",CCCCC1Cc2c(C)c(O)c(OBr)c(C)c2O1,16
"[0.8425460784969695, 0.8788033333333342, 0.6061428571428571, 0.9325611111111114]","tensor(0., dtype=torch.float64)",[0 0 0 ... 0 0 0],0.6551753201941264,18,"('mutation', '[*:1]~[D4](~[*;!H0;!H1:2])(~[*:3])~[*:4]>>[*:1]-[*:2](-[*:3])-[*:4]', 'CCc1c(O)c(Br)c(C)c2c1C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.2196, dtype=torch.float64)","tensor(2.8700e-07, dtype=torch.float64)",CCc1c(O)c(Br)c(C)c2c1C=CC(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,18
"[0.37242323751515144, 0.8725766666666671, 0.22571428571428573, 0.32816666666666694]","tensor(0.1108, dtype=torch.float64)",[0 0 1 ... 0 0 0],0.08350538119951081,19,"('crossover', 'COc1c(OBr)c(O)c(C)c2c1OC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2', 'Cc1c(OBr)c(OBr)c(C)c2oc(C(C)OC3NC(=O)NC3=O)cc12')","tensor(0.1108, dtype=torch.float64)","tensor(0.0068, dtype=torch.float64)",Cc1cc2c(C)c(OBr)c(OBr)c(C)c2o1,19
"[0.6670922683272728, 0.5582366666666668, 0.8779285714285714, 0.8413733333333338]","tensor(2.2601e-43, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.4445589944838837,21,"('mutation', '[#6:1]>>[#17:1]', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2')","tensor(0.3990, dtype=torch.float64)","tensor(0.0031, dtype=torch.float64)",Cc1c(N)c(O)c(Cl)c2c1OC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)CC2,21
"[0.3548138099878787, 0.2526999999999999, 0.6794285714285715, 0.47341555555555603]","tensor(0.0764, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.27401791743979226,24,"('crossover', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)NC3=O)cc1)O2', 'CONCCc1ccc(OCOC2SC(=O)NC2=O)cc1')","tensor(0.2475, dtype=torch.float64)","tensor(0.0030, dtype=torch.float64)",CONCCc1ccc(OCOCOC2SC(=O)NC2=O)cc1,24
"[0.6092201467515151, 0.3087533333333333, 0.758, 0.6153244444444449]","tensor(0.1624, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1753886773258994,27,"('crossover', 'CCCC1(C)CCc2c(C)c(O)c(OBr)c(C)c2O1', 'COCc1c2c(c(C)c(Br)c1CO)OC(OCOc1ccc(CC3NC(=O)NC3=O)cc1)C=C2')","tensor(0.1624, dtype=torch.float64)","tensor(0.0039, dtype=torch.float64)",COCc1c2c(c(C)c(Br)c1CO)OC(OCC1NC(=O)NC1=O)C=C2,27
"[0.7065526997939394, 0.3224433333333333, 0.8413571428571428, 0.9023755555555562]","tensor(1.7468e-07, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2408035063226635,33,"('mutation', '[#8:1]>>[#16:1]', 'Cc1c(C)c(C2NC(=O)NC2=O)c(C)c2c1OC(C)(COC(C)C1NC(=O)NC1=O)C=C2')","tensor(0.2289, dtype=torch.float64)","tensor(0.0029, dtype=torch.float64)",Cc1c(C)c(C2NC(=S)NC2=O)c(C)c2c1OC(C)(COC(C)C1NC(=O)NC1=O)C=C2,33
"[0.37596285145454544, 0.681666666666667, 0.2963571428571429, 0.5376611111111116]","tensor(0.0404, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.28373235849938316,35,"('crossover', 'CONc1ccc(-c2ccc(CO)cc2)cc1', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.2116, dtype=torch.float64)","tensor(0.0030, dtype=torch.float64)",OCc1ccc(COc2ccc(CCCNBr)cc2)cc1,35
"[0.5095685540484848, 0.59394, 0.5501428571428573, 0.7750944444444449]","tensor(1.6494e-22, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.42539087699325995,37,"('mutation', '[*;!R;!H1;!H0:1]~[*:2]>>[*:1]#C-[*:2]', 'Cc1c(C)c2c(c(C)c1O)C=CC(COc1ccc(CCNOC=O)cc1)O2')","tensor(0.3993, dtype=torch.float64)","tensor(0.0029, dtype=torch.float64)",C#Cc1c(C)c(O)c(C)c2c1OC(COc1ccc(CCNOC=O)cc1)C=C2,37
"[0.6155775541454546, 0.7130066666666671, 0.792, 0.8350544444444449]","tensor(0.3118, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.38939899176455484,38,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2')","tensor(0.3118, dtype=torch.float64)","tensor(0.0051, dtype=torch.float64)",Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)NC3=O)cc1)O2,38
"[0.609342596048485, 0.9950000000000009, 0.27635714285714286, 0.7936200000000002]","tensor(0.0491, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16602418982645262,40,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CCNBr)cc1)O2', 'OCCCc1ccc(OCc2ccc(OBr)cc2)cc1')","tensor(0.2150, dtype=torch.float64)","tensor(0.0020, dtype=torch.float64)",OCCCc1ccc(OCc2ccc(Cc3ccc(OBr)cc3)cc2)cc1,40
"[0.4003476135393939, 0.8732000000000006, 0.5320714285714286, 0.6215166666666669]","tensor(0.1533, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16443275635559645,42,"('crossover', 'Cc1c(C)c2c(c(C)c1OBr)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'CCON=Nc1ccc(CONc2ccc(CC3SC(=O)N3O)cc2)cc1')","tensor(0.1533, dtype=torch.float64)","tensor(0.0030, dtype=torch.float64)",CCON=Nc1ccc(Cc2ccc(CC3SC(=O)N3O)cc2)cc1,42
"[0.39741956096969694, 0.29596666666666666, 0.8193571428571429, 0.6127166666666668]","tensor(2.0037e-07, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2994461202205812,44,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'NCONc1ccc(CCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1')","tensor(0.2775, dtype=torch.float64)","tensor(0.0023, dtype=torch.float64)",NONc1ccc(CCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1,44
"[0.7603692738424241, 0.6086066666666669, 0.7073571428571429, 0.6101822222222226]","tensor(0.1115, dtype=torch.float64)",[0 0 1 ... 0 0 0],0.15296308908579204,45,"('mutation', '[*:1]~[D4](~[*;!H0:2])(~[*;!H0:3])~[*:4]>>[*:1]-[*:2]-[*:3]-[*:4]', 'Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(COC1NC(=O)NC1=O)C=C2')","tensor(0.1115, dtype=torch.float64)","tensor(0.0068, dtype=torch.float64)",Cc1c(OBr)c(OBr)c(C)c2oc(CCOC3NC(=O)NC3=O)cc12,45
"[0.3460104353333334, 0.8425433333333339, 0.36228571428571427, 0.6790500000000003]","tensor(1.0757e-33, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3618938497513464,50,"('mutation', '[#8:1]>>[#6:1]', 'CONc1ccc(OCC2C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1')","tensor(0.2897, dtype=torch.float64)","tensor(0.0059, dtype=torch.float64)",CONc1ccc(OCC2C=Cc3c(C)c(O)c(C)c(C)c3C2)cc1,50
"[0.01245539006060605, 0.5532000000000002, 0.2963571428571428, 0.315916666666667]","tensor(0.0278, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15598970988926938,51,"('crossover', 'CONc1ccc(OCOCOc2ccc(CO)cc2)cc1', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.1641, dtype=torch.float64)","tensor(0.0049, dtype=torch.float64)",CONc1ccc(-c2ccc(CO)cc2)cc1,51
"[0.6245745630060607, 0.9171266666666676, 0.36228571428571427, 0.8106166666666671]","tensor(0.0361, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.34902966303939537,53,"('crossover', 'CON(O)Cc1ccc(OCC2(C)C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.3577, dtype=torch.float64)","tensor(0.0026, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CCNBr)cc1)O2,53
"[0.7540342721696968, 0.7728533333333338, 0.40821428571428575, 0.49204222222222255]","tensor(0.1161, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10491156054094372,55,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(CO)CC2')","tensor(0.2196, dtype=torch.float64)","tensor(2.8702e-07, dtype=torch.float64)",Cc1c2c(c(OBr)c(OBr)c1OBr)CCC(C)(CO)O2,55
"[0.4701468336969697, 0.29653333333333326, 0.8193571428571429, 0.6991166666666668]","tensor(1.3790e-76, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3054885447479447,60,"('mutation', '[*;!R;!H1;!H0:1]~[*:2]>>[*:1]#[*:2]', 'NCONc1ccc(CCCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1')","tensor(0.2187, dtype=torch.float64)","tensor(0.0045, dtype=torch.float64)",NCONc1ccc(CC#COc2ccc(CC3NC(=O)NC3=O)cc2)cc1,60
"[0.3945139141212122, 0.4528499999999999, 0.6115, 0.6712088888888892]","tensor(3.1700e-08, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3110293854957609,61,"('mutation', '[*:1]~[D1]>>[*:1]', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.2854, dtype=torch.float64)","tensor(0.0027, dtype=torch.float64)",NCCCc1ccc(OCOc2ccc(CC3CNC(=O)N3)cc2)cc1,61
"[0.12466027404848491, 0.030699999999999988, 0.6974285714285715, 0.32487222222222256]","tensor(0.0599, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15848559879977722,65,"('crossover', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1', 'NCONc1ccc(CC#COc2ccc(CC3NC(=O)NC3=O)cc2)cc1')","tensor(0.2058, dtype=torch.float64)","tensor(0.0049, dtype=torch.float64)",NCONCOc1ccc(CC2CNC(=O)N2)cc1,65
"[0.38196062283636356, 0.5893666666666668, 0.36228571428571427, 0.5062611111111115]","tensor(0.0650, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2930897417017882,66,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CCNBr)cc1)O2', 'NONc1ccc(COCOc2ccc(CO)cc2)cc1')","tensor(0.2408, dtype=torch.float64)","tensor(0.0030, dtype=torch.float64)",OCc1ccc(OCOc2ccc(CCNBr)cc2)cc1,66
"[0.5217846150424241, 0.887843333333334, 0.5099285714285715, 0.7881477777777781]","tensor(4.6102e-43, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.433334860073403,67,"('mutation', '[*;!H0;!R:1]~[*:2]>>[*:1]=C-[*:2]', 'CON(O)Cc1ccc(OCC2(C)C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1')","tensor(0.4011, dtype=torch.float64)","tensor(0.0021, dtype=torch.float64)",C=CON(O)Cc1ccc(OCC2(C)C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1,67
"[0.939484954981818, 0.8392200000000004, 0.738, 0.9730722222222227]","tensor(0.2570, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.42746958611360913,72,"('mutation', '[*;!R:1]~[*:2]>>[*:1]O[*:2]', 'Cc1c(O)c(OBr)c(C)c2c1C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.2570, dtype=torch.float64)","tensor(2.8696e-07, dtype=torch.float64)",COc1c(OBr)c(O)c(C)c2c1OC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2,72
"[0.28829461133333323, 0.40388333333333337, 0.6800000000000002, 0.48819888888888935]","tensor(0.0392, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3016530283932142,73,"('crossover', 'NONc1ccc(COCOc2ccc(CO)cc2)cc1', 'O=C1SC(COc2ccc(CCCNBr)cc2)N1O')","tensor(0.2958, dtype=torch.float64)","tensor(0.0022, dtype=torch.float64)",NONc1ccc(COCOCOc2ccc(CO)cc2)cc1,73
"[0.9334871835999999, 0.7739200000000005, 0.6720714285714285, 0.9947055555555557]","tensor(0.0436, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.5559365902056248,78,"('crossover', 'COCc1c2c(c(C)c(Br)c1CO)OC(COc1ccc(CCO)cc1)C=C2', 'COc1c(OBr)c(O)c(C)c2c1OC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2')","tensor(0.4839, dtype=torch.float64)","tensor(0.0017, dtype=torch.float64)",COCc1c2c(c(C)c(Br)c1CO)OC(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2,78
"[0.6306063749333336, 0.6096500000000001, 0.5115714285714286, 0.7587122222222225]","tensor(2.8551e-16, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3429218376306514,80,"('mutation', '[*:1]~[D1]>>[*:1]', 'O=C1NC(=O)C(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.2699, dtype=torch.float64)","tensor(0.0054, dtype=torch.float64)",O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1,80
"[0.08826259713939394, 0.2327666666666666, 0.49157142857142855, 0.2972044444444448]","tensor(0.0075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.17996221137865187,81,"('crossover', 'CONc1ccc(CCOc2ccc(CCCO)cc2)cc1', 'Cc1c(C)c2c(c(C)c1O)C=CC(COc1ccc(CCNOC=O)cc1)O2')","tensor(0.1798, dtype=torch.float64)","tensor(0.0043, dtype=torch.float64)",CONc1ccc(CCOCCNOC=O)cc1,81
"[0.2248137243636365, 0.6773333333333337, 0.21778571428571428, 0.5575188888888895]","tensor(0.0049, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1865392471009554,82,"('crossover', 'CCc1ccc(OCc2ccc(CCNOC)cc2)cc1', 'OCCCc1ccc(OCc2ccc(OBr)cc2)cc1')","tensor(0.1748, dtype=torch.float64)","tensor(0.0024, dtype=torch.float64)",CCc1ccc(OCCc2ccc(CCNOC)cc2)cc1,82
"[0.4793129481818181, 0.6484600000000001, 0.5501428571428572, 0.7395611111111114]","tensor(1.2658e-08, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.44690223190181594,83,"('mutation', '[*;!H0;!R;!H1:1]>>[*:1]=O', 'CONCCc1ccc(OCC2C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1')","tensor(0.3871, dtype=torch.float64)","tensor(0.0036, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(COc1ccc(CCNOC=O)cc1)O2,83
"[0.930559131030303, 0.5719200000000001, 0.8239285714285713, 0.9572577777777782]","tensor(0.1349, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3367357094373335,88,"('crossover', 'COCc1c2c(c(C)c(Br)c1CO)OC(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2', 'O=C1NC(=O)C(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.3505, dtype=torch.float64)","tensor(0.0033, dtype=torch.float64)",COCc1c2c(c(C)c(Br)c1CO)OC(OCOc1ccc(CC3NC(=O)NC3=O)cc1)C=C2,88
"[0.6760939477575758, 0.4904499999999999, 0.6974285714285715, 0.7932500000000003]","tensor(2.8716e-27, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.3279007838016222,90,"('mutation', '[*;!H0;!R:1]>>[*:1]-N', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1')","tensor(0.2794, dtype=torch.float64)","tensor(0.0045, dtype=torch.float64)",NC(CCc1ccc(OCOc2ccc(CC3CNC(=O)N3)cc2)cc1)NBr,90
"[0.23081149574545462, 0.6177166666666669, 0.36228571428571427, 0.5346833333333337]","tensor(2.4719e-19, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.36167153852241624,98,"('crossover', 'Cc1c2c(c(OBr)c(OBr)c1OBr)CCC(C)(OCO)O2', 'CONc1ccc(COc2ccc(CCCO)cc2)cc1')","tensor(0.3111, dtype=torch.float64)","tensor(0.0030, dtype=torch.float64)",CONc1ccc(CCOc2ccc(CCCO)cc2)cc1,98
"[0.13987039064242424, 0.7819000000000004, 0.21778571428571428, 0.46491888888888944]","tensor(0.1616, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18006602550620687,102,"('crossover', 'CNc1c(C)c2c(c(C)c1O)C=CC(C)(CCOc1ccc(CC3NC(=O)NC3=O)cc1)O2', 'CONc1ccc(COc2ccc(CCNOC=O)cc2)cc1')","tensor(0.2697, dtype=torch.float64)","tensor(0.0038, dtype=torch.float64)",CCCc1ccc(OCc2ccc(NOC)cc2)cc1,102
"[0.01245539006060605, 0.5159833333333336, 0.3962857142857143, 0.31289111111111145]","tensor(0.0125, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1902609971559165,105,"('crossover', 'NCCCc1ccc(OCOc2ccc(CC3CNC(=O)N3)cc2)cc1', 'Cc1ccc(Oc2ccc(CCO)cc2)cc1')","tensor(0.1714, dtype=torch.float64)","tensor(0.0039, dtype=torch.float64)",Nc1ccc(Oc2ccc(CCO)cc2)cc1,105
"[0.5519831190181818, 0.8715233333333341, 0.5099285714285715, 0.6879922222222228]","tensor(1.8137e-39, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.4493055569486323,108,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CN(O)OF)cc1)O2')","tensor(0.3664, dtype=torch.float64)","tensor(0.0032, dtype=torch.float64)",Cc1c(O)c(C)c(CF)c2c1C=CC(C)(COc1ccc(CN(O)OF)cc1)O2,108
"[0.3307784683757575, 0.9101166666666675, 0.27635714285714286, 0.6588644444444447]","tensor(1.0204e-24, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.19491966826583448,110,"('crossover', 'CCOc1ccc(Cc2ccc(CO)cc2)cc1', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)NC3=O)cc1)O2')","tensor(0.1715, dtype=torch.float64)","tensor(0.0021, dtype=torch.float64)",CCOc1ccc(Oc2ccc(Cc3ccc(CO)cc3)cc2)cc1,110
"[0.7603692738424241, 0.6950233333333337, 0.7073571428571429, 0.6084488888888893]","tensor(3.3138e-05, dtype=torch.float64)",[0 1 1 ... 0 0 0],0.13124543143765413,113,"('mutation', '[*:1]~[D4](~[*;!H0:2])(~[*;!H0:3])~[*:4]>>[*:1]-[*:2]-[*:3]-[*:4]', 'Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(COC1NC(=O)NC1=O)C=C2')","tensor(0.1010, dtype=torch.float64)","tensor(0.0074, dtype=torch.float64)",Cc1c(OBr)c(OBr)c(C)c2oc(C(C)OC3NC(=O)NC3=O)cc12,113
"[0.5792139177818182, 0.8017566666666672, 0.7517857142857144, 0.7848633333333338]","tensor(0.0503, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3732213899865286,115,"('mutation', '[*:1]~[D3](~[*;!H0:2])~[*:3]>>[*:1]-[*:2]-[*:3]', 'Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)NC3=O)cc1)O2')","tensor(0.3004, dtype=torch.float64)","tensor(0.0033, dtype=torch.float64)",Cc1c(O)c(N)c(C)c2c1CCC(C)(COc1ccc(C3SC(=O)N3O)cc1)O2,115
"[0.5518639587636365, 0.24378333333333327, 0.8773571428571427, 0.6783566666666673]","tensor(0.0002, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2146949980657548,117,"('crossover', 'CC(OCCOc1ccc(CC2SC(=O)NC2=O)cc1)C1NC(=O)NC1=O', 'CC(OCCOc1ccc(CC2SC(=O)NC2=O)cc1)C1NC(=O)NC1=O')","tensor(0.2075, dtype=torch.float64)","tensor(0.0029, dtype=torch.float64)",CC(OCCCOc1ccc(CC2SC(=O)NC2=O)cc1)C1NC(=O)NC1=O,117
"[0.00943948409696969, 0.6370200000000003, 0.21042857142857144, 0.31649777777777816]","tensor(0.0146, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12888711522251975,118,"('crossover', 'OCCc1ccc(Oc2ccc(OCCOBr)cc2)cc1', 'CCOc1ccc(Cc2ccc(O)cc2)cc1')","tensor(0.1412, dtype=torch.float64)","tensor(0.0050, dtype=torch.float64)",Cc1ccc(Oc2ccc(CCO)cc2)cc1,118
"[0.22143507856969688, 0.5141000000000001, 0.6839285714285714, 0.3434355555555558]","tensor(0.0429, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.13186509781543151,119,"('crossover', 'Cc1c(C)c2c(c(C)c1OBr)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'CCON=Nc1ccc(CONc2ccc(CC3SC(=O)N3O)cc2)cc1')","tensor(0.1688, dtype=torch.float64)","tensor(0.0064, dtype=torch.float64)",CCON=Nc1ccc(CONC2SC(=O)N2O)cc1,119
"[0.19735350623030304, 0.40820000000000006, 0.6140714285714287, 0.42206555555555586]","tensor(4.7037e-29, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.297008242320614,121,"('crossover', 'NONc1ccc(CCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1', 'CONc1ccc(OCOCOc2ccc(CO)cc2)cc1')","tensor(0.2197, dtype=torch.float64)","tensor(0.0047, dtype=torch.float64)",NONc1ccc(COCOc2ccc(CO)cc2)cc1,121
"[0.4701468336969697, 0.2712166666666667, 0.8193571428571429, 0.7020611111111114]","tensor(8.8038e-09, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.28632806419498025,122,"('mutation', '[*;!R;!H1;!H0:1]~[*:2]>>[*:1]#[*:2]', 'NCONc1ccc(CCCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1')","tensor(0.2280, dtype=torch.float64)","tensor(0.0043, dtype=torch.float64)",NCONc1ccc(C#CCOc2ccc(CC3NC(=O)NC3=O)cc2)cc1,122
"[0.2518704098303031, 0.49410000000000015, 0.5141428571428571, 0.4226911111111115]","tensor(1.1755e-91, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3300073042627913,125,"('mutation', '[*;!H0;!R:1]>>[*:1]-F', 'NONc1ccc(COCOc2ccc(CO)cc2)cc1')","tensor(0.2495, dtype=torch.float64)","tensor(0.0037, dtype=torch.float64)",OCc1ccc(OCOCc2ccc(NONF)cc2)cc1,125
"[0.43695154043636364, 0.785293333333334, 0.4282142857142857, 0.7352277777777781]","tensor(0.2333, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.40436688023845613,130,"('mutation', '[*;!H0;!R:1]>>[*:1]-C', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CNO)cc1)O2')","tensor(0.2333, dtype=torch.float64)","tensor(2.8696e-07, dtype=torch.float64)",CONCc1ccc(OCC2(C)C=Cc3c(C)c(O)c(C)c(C)c3O2)cc1,130
"[0.5366319918060606, 0.6487166666666669, 0.6952142857142858, 0.6832133333333336]","tensor(2.6088e-38, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3314361919052947,133,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'C=CON(O)Cc1ccc(OCOc2ccc(CC3SC(=O)NC3=O)cc2)cc1')","tensor(0.2731, dtype=torch.float64)","tensor(0.0032, dtype=torch.float64)",C=CON(O)Cc1ccc(OCOc2ccc(C3SC(=O)NC3=O)cc2)cc1,133
"[0.8789097148606061, 0.8566866666666672, 0.606142857142857, 0.9877944444444448]","tensor(2.1664e-164, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.6056421593623424,135,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'CCc1c2c(c(C)c(Br)c1CO)OC(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2')","tensor(0.4269, dtype=torch.float64)","tensor(0.0035, dtype=torch.float64)",C=Cc1c2c(c(C)c(Br)c1CO)OC(COc1ccc(CC3SC(=O)NC3=O)cc1)C=C2,135
"[0.6422646874060607, 0.8150150000000004, 0.5785714285714286, 0.5463055555555563]","tensor(0.0939, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11432184879347103,136,"('crossover', 'Cc1c2c(c(OBr)c(OBr)c1OBr)CCC(C)(C(=N)O)O2', 'CCOc1ccc(Cc2ccc(-c3ccc(CC4NC(=O)NC4=O)cc3)cc2)cc1')","tensor(0.0939, dtype=torch.float64)","tensor(0.0046, dtype=torch.float64)",CCOc1c(OBr)c(C)c2c(c1OBr)CCC(C)(C(=N)O)O2,136
"[0.7847033268969694, 0.9346700000000007, 0.40821428571428575, 0.7357311111111113]","tensor(0.0225, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18908052571953873,138,"('mutation', '[*:1]~[D1]>>[*:1]', 'Cc1c2c(c(C)c(OBr)c1OBr)OC(C)(COc1ccc(CO)cc1)C=C2')","tensor(0.2032, dtype=torch.float64)","tensor(0.0044, dtype=torch.float64)",Cc1c2c(cc(OBr)c1OBr)C=CC(C)(COc1ccc(CO)cc1)O2,138
"[0.38196062283636356, 0.6899333333333337, 0.36228571428571427, 0.5102500000000003]","tensor(0.0517, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.25415779026197405,140,"('crossover', 'O=C1NCC(Cc2ccc(OCOc3ccc(CCCNBr)cc3)cc2)N1', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.2352, dtype=torch.float64)","tensor(0.0016, dtype=torch.float64)",Oc1ccc(OCOc2ccc(CCCNBr)cc2)cc1,140
"[0.7001612518545454, 0.30443666666666663, 0.8239285714285713, 0.6814577777777782]","tensor(0.1840, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.20429963103347282,146,"('crossover', 'COCc1c2c(c(C)c(Br)c1CO)OC(OCC1NC(=O)NC1=O)C=C2', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.1840, dtype=torch.float64)","tensor(0.0025, dtype=torch.float64)",COCc1c2c(c(C)c(Br)c1CO)OC(OCOCC1NC(=O)NC1=O)C=C2,146
"[0.09426036852121222, 0.1659333333333333, 0.5732857142857144, 0.23808000000000032]","tensor(0.0782, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1526654268633797,149,"('crossover', 'CON(O)Cc1ccc(OCOc2ccc(CC3SC(=O)NC3=O)cc2)cc1', 'Cc1c(C)c2c(c(C)c1Cl)C=CC(COc1ccc(CCNOC=O)cc1)O2')","tensor(0.2004, dtype=torch.float64)","tensor(0.0047, dtype=torch.float64)",CON(O)COc1ccc(CCNOC=O)cc1,149
