descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.6489252845454544, 0.8258100000000006, 0.6061428571428571, 0.8993722222222227]","tensor(4.8314e-11, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.6139623423144214,14,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,14
"[0.8910155167393937, 0.8891900000000007, 0.6720714285714285, 0.9529055555555559]","tensor(0.3581, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.4879805920751958,18,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(O)c(OBr)c(C)c2c1C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,18
"[0.6610310864242424, 0.6340266666666668, 0.7506428571428571, 0.8530588888888894]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.39736026273556446,21,"('mutation', '[#6:1]>>[#8:1]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,21
"[0.37923571643636345, 0.17594333333333326, 0.8365714285714285, 0.527755555555556]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15232468719961187,24,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(COCC1NC(=O)NC1=O)O2,24
"[0.22738214092121203, 0.6390100000000004, 0.27635714285714286, 0.33089777777777807]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09335343741574066,35,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(O)O2,35
"[0.6036358242303029, 0.6217766666666669, 0.6920714285714286, 0.8419466666666673]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.42453219888148075,37,"('mutation', '[#16:1]>>[#7:1]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2,37
"[0.3881615403878787, 0.3594599999999999, 0.7506428571428571, 0.5231811111111115]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15649293980155088,44,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(COC1SC(=O)NC1=O)O2,44
"[0.348992300751515, 0.758843333333334, 0.4208571428571429, 0.6471622222222226]","tensor(0.1254, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2686772422442063,50,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CO)cc1)O2,50
"[0.38216376900606064, 0.49380999999999986, 0.6847142857142857, 0.5596477777777782]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.16238542057857358,61,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(CCC1SC(=O)NC1=O)O2,61
"[0.33969210214545453, 0.4287933333333332, 0.6847142857142857, 0.5083477777777781]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14056071254670624,73,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(CC1SC(=O)NC1=O)O2,73
"[0.7035027532848485, 0.6763566666666668, 0.7506428571428571, 0.9046255555555561]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3993376211922999,78,"('mutation', '[*;!H0;!R:1]>>[*:1]-O', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(O)c(CO)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,78
"[0.6607278966787877, 0.7087433333333336, 0.5275714285714286, 0.7033188888888895]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15786805390757516,80,"('crossover', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COCC1SC(=O)NC1=O)O2,80
"[0.03975911835151516, 0.30389333333333324, 0.49942857142857144, 0.258915555555556]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.0995223308675407,81,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(O)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(O)(CO)O2,81
"[0.4185274053696968, 0.5583266666666667, 0.6061428571428571, 0.6235722222222226]","tensor(0.1773, dtype=torch.float64)",[0 1 0 ... 0 0 0],0.2118332974761055,83,"('crossover', 'Cc1c(O)c(CO)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)C=CC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)C=CC(C)(COCC1SC(=O)NC1=O)O2,83
"[0.07623301383030302, 0.5472600000000003, 0.3549285714285714, 0.3486066666666672]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11979721355937244,98,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COC1SC(=O)NC1=O)O2', 'Cc1c(O)c(CO)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(CCO)O2,98
"[0.04261095235151515, 0.5019833333333333, 0.3555, 0.24128333333333363]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10605117968754134,105,"('mutation', '[*:1]~[D3](~[*;!H0:2])~[*:3]>>[*:1]-[*:2]-[*:3]', 'CCOc1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",CCOc1ccc(CC2SC(=O)N2O)cc1,105
"[0.4155408693818181, 0.9187933333333341, 0.3422857142857143, 0.6454422222222227]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.1661777696397101,108,"('mutation', '[*;!H0;!R:1]>>[*:1]-Cl', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8696e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(OCl)cc1)O2,108
"[0.23982517309090892, 0.3515266666666666, 0.6261428571428572, 0.445935555555556]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11941418950488955,121,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3NC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COC1SC(=O)NC1=O)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(C1NC(=O)NC1=O)O2,121
"[0.07897458871515152, 0.41323333333333334, 0.3957142857142857, 0.29147444444444487]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11274650520461482,125,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",CCOc1ccc(CC2SC(=O)NC2=O)cc1,125
"[0.47310487410909086, 0.5334933333333334, 0.6720714285714285, 0.6277055555555562]","tensor(0.3581, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.23961464459154178,133,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COC1SC(=O)NC1=O)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3581, dtype=torch.float64)","tensor(2.8697e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(COCOC1SC(=O)NC1=O)O2,133
"[0.8911257758545454, 0.9762266666666677, 0.5275714285714286, 0.9791188888888892]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.25400023889243367,135,"('mutation', '[*;!H0;!R:1]>>[*:1]-Br', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,135
