descriptor,expected_improvement,fingerprint,fitness,niche_index,pedigree,predicted_fitness,predicted_uncertainty,smiles,archive index
"[0.3126627049333332, 0.5764433333333333, 0.6480714285714286, 0.6059400000000003]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.18335714591430843,2.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(N)cc1)O2,2
"[0.655033315042424, 0.8123766666666671, 0.6061428571428571, 0.8914500000000005]",,[0 0 0 ... 0 0 0],0.6074564271049663,,"('database', 'no reaction', 'no parent')",,,Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,14
"[0.8971235472363632, 0.8757566666666675, 0.6720714285714285, 0.9449833333333337]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.5729764464536002,18.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9626e-07, dtype=torch.float64)",Cc1c(O)c(C)c(OBr)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,18
"[0.6580492210060606, 0.6284266666666669, 0.792, 0.8749322222222227]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3857301165241821,21.0,"('mutation', '[#6:1]>>[#7:1]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,21
"[0.2698538077818181, 0.6460933333333337, 0.27635714285714286, 0.3849755555555559]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09940150745272823,35.0,"('crossover', 'Cc1c(O)c(CN)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9629e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(CO)O2,35
"[0.6519411905090909, 0.7000600000000001, 0.792, 0.8803211111111116]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.37683959645855714,38.0,"('mutation', '[*;!H0:1]-[*;!H0:2]>>[*:1]=[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(C=C3SC(=O)NC3=O)cc1)O2,38
"[0.3367102367272726, 0.4231933333333333, 0.7260714285714285, 0.5302211111111116]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.14026387520332567,44.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(N)(CC1SC(=O)NC1=O)O2,44
"[0.3126286643878786, 0.7809600000000007, 0.4208571428571429, 0.5919288888888894]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.23072973059778953,50.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(O)cc1)O2,50
"[0.7429925547272725, 0.713086666666667, 0.7919999999999999, 0.978065555555556]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.3898862018548184,72.0,"('mutation', '[*;!R:1]~[*:2]>>[*:1]C[*:2]', 'Cc1c(O)c(CN)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9626e-07, dtype=torch.float64)",CCc1c(CN)c(O)c(C)c2c1OC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)CC2,72
"[0.33969210214545453, 0.47279333333333334, 0.6061428571428571, 0.5102722222222225]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.12762209669160163,73.0,"('mutation', '[*;!R:1]~[*:2]>>[*:1]O[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(C1SC(=O)NC1=O)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",COC1(C2SC(=O)NC2=O)CCc2c(C)c(O)c(C)c(C)c2O1,73
"[0.7005208878666667, 0.670756666666667, 0.792, 0.9264988888888894]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.38966271767680216,78.0,"('mutation', '[*;!H0;!R:1]>>[*:1]-N', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(O)c(CN)c(C)c2c1CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,78
"[0.6607278966787877, 0.7087433333333336, 0.5275714285714286, 0.7033188888888895]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15979446696691002,80.0,"('crossover', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COCC1SC(=O)NC1=O)O2,80
"[0.3521184658303031, 0.7398100000000003, 0.46221428571428574, 0.6611133333333339]","tensor(0.1850, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.26141682441756203,83.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9626e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CN)cc1)O2,83
"[0.24275322566060606, 0.5621600000000001, 0.4742857142857143, 0.47676111111111147]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11043203295817522,98.0,"('mutation', '[*:1]~[D2]~[*:2]>>[*:1]-[*:2]', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(C1SC(=O)NC1=O)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9629e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC2(C)C1SC(=O)NC1=O,98
"[0.036502921854545456, 0.4349, 0.3957142857142857, 0.23868555555555585]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.10438026690439439,105.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'CCOc1ccc(CC2SC(=O)NC2=O)cc1')","tensor(0.3162, dtype=torch.float64)","tensor(5.9629e-07, dtype=torch.float64)",CCOc1ccc(C2SC(=O)NC2=O)cc1,105
"[0.6122584584363634, 0.8360100000000007, 0.46164285714285713, 0.6857077777777782]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.15205599061834085,108.0,"('crossover', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(CCC1SC(=O)NC1=O)O2,108
"[0.036777252933333324, 0.2982933333333333, 0.5407857142857143, 0.2807888888888892]","tensor(0.3162, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.09785787631958645,121.0,"('crossover', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1O)CCC(N)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1O)CCC(N)(CO)O2,121
"[0.321064820909091, 0.45725, 0.4616428571428572, 0.3396744444444448]","tensor(0.2076, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.11115831203651926,125.0,"('crossover', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2', 'Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.3162, dtype=torch.float64)","tensor(5.9628e-07, dtype=torch.float64)",O=C1NC(=O)C(Cc2ccc(OCOBr)cc2)S1,125
"[0.8911257758545454, 0.9762266666666677, 0.5275714285714286, 0.9791188888888892]","tensor(0.6075, dtype=torch.float64)",[0 0 0 ... 0 0 0],0.2615953951969466,135.0,"('mutation', '[*;!H0;!R:1]>>[*:1]-Br', 'Cc1c(C)c2c(c(C)c1O)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2')","tensor(0.6075, dtype=torch.float64)","tensor(1.0000e-10, dtype=torch.float64)",Cc1c(C)c2c(c(C)c1OBr)CCC(C)(COc1ccc(CC3SC(=O)NC3=O)cc1)O2,135
